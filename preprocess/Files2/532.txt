given text string pattern string check pattern exist text 
pattern search algorithm kmp rabin karp naiv algorithm finit automata alreadi discuss use check 
discuss suffix tree base algorithm 
prerequisit must know build suffix tree one way 
suffix tree built given text need travers tree root leaf charact pattern 
fall tree e 
path root leaf somewher middl travers pattern exist text substr 
build suffix tree use ukkonen algorithm discuss alreadi ukkonen suffix tree construct part 1 ukkonen suffix tree construct part 2 ukkonen suffix tree construct part 3 ukkonen suffix tree construct part 4 ukkonen suffix tree construct part 5 ukkonen suffix tree construct part 6 core travers implement substr check modifi accordingli suffix tree built algorithm 
c program substr check use ukkonen suffix tree construct includ stdio h includ string h includ stdlib h defin max_char 256 struct suffixtreenod struct suffixtreenod children max_char pointer node via suffix link struct suffixtreenod suffixlink start end interv specifi edg node connect parent node 
edg connect two node one parent one child start end interv given edg store child node 
let say two nod b connect edg indic 5 8 indic 5 8 store node b 
int start int end leaf node store index suffix path root leaf int suffixindex typedef struct suffixtreenod node char text 100 input string node root null pointer root node lastnewnod point newli creat intern node wait suffix link set might get new suffix link root next extens phase 
lastnewnod set null last newli creat intern node got suffix link reset new intern node creat next extens phase 
node lastnewnod null node activenod null activeedg represet input string charact index charact int activeedg 1 int activelength 0 remainingsuffixcount tell mani suffix yet ad tree int remainingsuffixcount 0 int leafend 1 int rootend null int splitend null int size 1 length input string node newnod int start int end node node node malloc sizeof node int 0 max_char node children null root node suffixlink set null intern node suffixlink set root default current extens may chang next extens node suffixlink root node start start node end end suffixindex set 1 default actual suffix index set later leav end phase node suffixindex 1 return node int edgelength node n n root return 0 return n end n start 1 int walkdown node currnod activepoint chang walk apcfwd use skip count trick trick 1 
activelength greater current edg length set next intern node activenod adjust activeedg activelength accordingli repres activepoint activelength edgelength currnod activeedg edgelength currnod activelength edgelength currnod activenod currnod return 1 return 0 void extendsuffixtre int po extens rule 1 take care extend leav creat far tree leafend po increment remainingsuffixcount indic new suffix ad list suffix yet ad tree remainingsuffixcount set lastnewnod null start new phase indic intern node wait suffix link reset current phase lastnewnod null add suffix yet ad one one tree remainingsuffixcount 0 activelength 0 activeedg po apcfalz outgo edg start activeedg activenod activenod children text activeedg null extens rule 2 new leaf edg get creat activenod children text activeedg newnod po leafend new leaf edg creat line start existng node current activenod intern node wait suffix link get reset point suffix link last intern node current activenod 
set lastnewnod null indic node wait suffix link reset 
lastnewnod null lastnewnod suffixlink activenod lastnewnod null outgo edg start activeedg activenod els get next node end edg start activeedg node next activenod children text activeedg walkdown next walkdown start next node new activenod continu extens rule 3 current charact process alreadi edg text next start activelength text po newli creat node wait suffix link set set suffix link wait node curent activ node lastnewnod null activenod root lastnewnod suffixlink activenod lastnewnod null apcfer3 activelength stop process phase move next phase break activepoint middl edg travers current charact process edg fall tree 
case add new intern node new leaf edg go new node 
extens rule 2 new leaf edg new intern node get creat splitend int malloc sizeof int splitend next start activelength 1 new intern node node split newnod next start splitend activenod children text activeedg split new leaf come new intern node split children text po newnod po leafend next start activelength split children text next start next got new intern node 
intern node creat last extens phase still wait suffix link reset 
lastnewnod null suffixlink lastnewnod point current newli creat intern node lastnewnod suffixlink split make current newli creat intern node wait suffix link reset point root present 
come across intern node exist newli creat next extens phase new leaf edg get ad e 
extens rule 2 appli next extens phase point suffixlink node point intern node 
lastnewnod split one suffix got ad tree decrement count suffix yet ad 
remainingsuffixcount activenod root activelength 0 apcfer2c1 activelength activeedg po remainingsuffixcount 1 els activenod root apcfer2c2 activenod activenod suffixlink void print int int j int k k k j k printf c text k print suffix tree well along set suffix index tree print df manner edg along suffix index print void setsuffixindexbydf node n int labelheight n null return n start 1 non root node print label edg parent current node uncom line print suffix tree print n start n end int leaf 1 int 0 max_char n children null uncom two line print suffix index leaf 1 n start 1 printf n n suffixindex current node leaf outgo edg 
leaf 0 setsuffixindexbydf n children labelheight edgelength n children leaf 1 n suffixindex size labelheight uncom line print suffix index printf n n suffixindex void freesuffixtreebypostord node n n null return int 0 max_char n children null freesuffixtreebypostord n children n suffixindex 1 free n end free n build suffix tree print edg label along suffixindex 
suffixindex leaf edg 0 non leaf edg 1 void buildsuffixtre size strlen text int rootend int malloc sizeof int rootend 1 root special node start end indic 1 parent edg come root root newnod 1 rootend activenod root first activenod root 0 size extendsuffixtre int labelheight 0 setsuffixindexbydf root labelheight int traverseedg char str int idx int start int end int k 0 travers edg charact charact match k start k end str idx 0 k idx text k str idx return 1 mo match str idx 0 return 1 match return 0 charact yet match int dotravers node n char str int idx n null return 1 match int re 1 node n root node travers edg node n parent node n n start 1 re traverseedg str idx n start n end re 0 return re match re 1 match re 1 get charact index search idx idx edgelength n edg node n go current charact str idx travrs edg n children str idx null return dotravers n children str idx str idx els return 1 match void checkforsubstr char str int re dotravers root str 0 re 1 printf pattern substr n str els printf pattern substr n str driver program test function int main int argc char argv strcpi text test text buildsuffixtre checkforsubstr test checkforsubstr checkforsubstr checkforsubstr checkforsubstr checkforsubstr test1 checkforsubstr good checkforsubstr te checkforsubstr tesa checkforsubstr isb free dynam alloc memori freesuffixtreebypostord root return 0 output pattern test substr pattern substr pattern substr pattern substr pattern substr pattern test1 substr pattern good substr pattern te substr pattern tesa substr pattern isb substr ukkonen suffix tree construct take n time space build suffix tree string length n travers substr check take pattern length slight modif travers algorithm discuss answer follow find occurr given pattern p present text check pattern prefix text 
check pattern suffix text 
publish follow articl suffix tree applic suffix tree applic 2 search pattern suffix tree applic 3 longest repeat substr suffix tree applic 4 build linear time suffix array gener suffix tree 1 suffix tree applic 5 longest common substr suffix tree applic 6 longest palindrom substr articl contribut anurag singh 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
