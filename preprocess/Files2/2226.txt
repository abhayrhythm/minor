prerequisit bit given n line segment either horizont vertic find maximum number triangl includ triangl zero area form join intersect point line segment 
two horizont line segment overlap two vertic line segment 
line repres use two point four integ first two x coordin respect first point two x coordin second point exampl line segment four point intersect vertic horizont line everi three form triangl 4c3 triangl 
idea base sweep line algorithm 
build solut step store point line segment correspond event describ vector sort point non decreas order x coordin 
let imagin vertic line sweep across point describ 3 event base point current leftmost point horizont line segment rightmost point horizont line segment vertic line call region activ horizont line activ first event second 
bit binari index tree store coordin activ line 
line becom inact remov bit 
event third type occur vertic line queri tree rang coordin add result number intersect point far 
final number point intersect say number triangl includ zero area mc3 
note need care sort point look cmp function implement clarif 
c implement idea includ bit stdc h defin maxi 1000005 defin maxn 10005 use namespac std structur store point struct point int x point int int b x b note global array initi zero array store bit vector store point correspond event number second field pair int bit maxi vector pair point int event compar function sort order non decreas x coordin x coordin order basi event point bool cmp pair point int pair point int b first x b first x return first x b first x x coordin els point vertic line second 3 b second 3 return true event occur vertic line event x coordin els second 1 b second 3 return true vertic line come event x coordin swap els second 3 b second 1 return fals event occur vertic line event x coordin swap 
els second 2 b second 3 return fals situat return true updat 1 insert horizont line coordin activ region updat 1 remov void updat int idx int val idx maxn bit idx val idx idx idx return number line activ region whose coordin 1 idx int queri int idx int re 0 idx 0 re bit idx idx idx idx return re insert line segment void insertlin point point b horizont line b int beg min x b x int end max x b x second field pair event number event push_back make_pair point beg 1 event push_back make_pair point end 2 vertic line els int max b int low min b second field pair event number event push_back make_pair point x 3 event push_back make_pair point x low 3 return number intersect point line vertic horizont run point sort use cmp function int findintersectionpoint int intersection_pt 0 int 0 event size current point event event second 1 insert coordin activ region updat event first 1 current point event els event second 2 remov coordin activ region updat event first 1 current point vertic line els find rang queri int low event first int event first intersection_pt queri queri low return intersection_pt return intersection_pt c3 int findnumberoftriangl int pt findintersectionpoint pt 3 return pt pt 1 pt 2 6 els return 0 driver code int main insertlin point 2 1 point 2 9 insertlin point 1 7 point 6 7 insertlin point 5 2 point 5 8 insertlin point 3 4 point 6 4 insertlin point 4 3 point 4 5 insertlin point 7 6 point 9 6 insertlin point 8 2 point 8 5 sort point base x coordin event sort event begin event end cmp cout number triangl findnumberoftriangl n return 0 output number triangl 4 time complex n log n n log maximum_i articl contribut saumy malhotra 
like geeksforgeek would like contribut also write articl use contribut geeksforgeek org mail articl contribut geeksforgeek org 
see articl appear geeksforgeek main page help geek 
pleas write comment find anyth incorrect want share inform topic discuss 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
