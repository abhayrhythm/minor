
Write a function subtract(x, y) that returns x-y where x and y are integers. The function should not use any of the arithmetic operators (+, ++, –, -, .. etc). 
The idea is to use bitwise operators. Addition of two numbers has been discussed using Bitwise operators.   Like addition, the idea is to use subtractor logic. 
The truth table for the half subtractor is given below.

X 	Y     Diff     Borrow
0 	0 	0 	0
0 	1 	1 	1
1 	0 	1 	0
1 	1 	0 	0
From the above table one can draw the Karnaugh map for “difference” and “borrow”.
So, Logic equations are:

    Diff   = y ⊕ x
    Borrow = x' . y 
Source: Wikipedia page for subtractor
Following is C implementation based on above equations.  

#include<stdio.h>

int subtract(int x, int y)
{
    // Iterate till there is no carry
    while (y != 0)
    {
        // borrow contains common set bits of y and unset
        // bits of x
        int borrow = (~x) & y;

        // Subtraction of bits of x and y where at least
        // one of the bits is not set
        x = x ^ y;

        // Borrow is shifted by one so that subtracting it from
        // x gives the required sum
        y = borrow << 1;
    }
    return x;
}

// Driver program
int main()
{
    int x = 29, y = 13;
    printf("x - y is %d", subtract(x, y));
    return 0;
}

Output:
x - y is 16
Following is recursive implementation for the same approach.

#include<stdio.h>

int subtract(int x, int y)
{
    if (y == 0)
        return x;
    return subtract(x ^ y, (~x & y) << 1);
}

// Driver program
int main()
{
    int x = 29, y = 13;
    printf("x - y is %d", subtract(x, y));
    return 0;
}

Output:
x - y is 16
This article is contributed Dheeraj. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above




(adsbygoogle = window.adsbygoogle || []).push({});


Company Wise Coding Practice
   Topic Wise Coding Practice
