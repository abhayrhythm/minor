recommend read follow two post prerequisit post 
1 greedi algorithm set 5 prim minimum span tree mst 2 graph represent discuss prim algorithm implement adjac matrix represent graph 
time complex matrix represent v 2 
post elogv algorithm adjac list represent discuss 
discuss previou post prim algorithm two set maintain one set contain list vertic alreadi includ mst set contain vertic yet includ 
adjac list represent vertic graph travers v e time use bf 
idea travers vertic graph use bf use min heap store vertic yet includ mst 
min heap use prioriti queue get minimum weight edg cut 
min heap use time complex oper like extract minimum element decreas key valu logv min heap 
follow detail step 
1 creat min heap size v v number vertic given graph 
everi node min heap contain vertex number key valu vertex 
2 initi min heap first vertex root key valu assign first vertex 0 
key valu assign vertic inf infinit 
3 min heap empti follow extract min valu node min heap 
let extract vertex u 
b everi adjac vertex v u check v min heap yet includ mst 
v min heap key valu weight u v updat key valu v weight u v let us understand algorithm follow exampl initi key valu first vertex 0 inf infinit vertic 
vertex 0 extract min heap key valu vertic adjac 0 1 7 updat 
min heap contain vertic except vertex 0 vertic green color vertic includ mst 
sinc key valu vertex 1 minimum among node min heap extract min heap key valu vertic adjac 1 updat key updat vertex min heap previou key valu greater weight edg 1 adjac 
min heap contain vertic except vertex 0 1 sinc key valu vertex 7 minimum among node min heap extract min heap key valu vertic adjac 7 updat key updat vertex min heap previou key valu greater weight edg 7 adjac 
min heap contain vertic except vertex 0 1 7 sinc key valu vertex 6 minimum among node min heap extract min heap key valu vertic adjac 6 updat key updat vertex min heap previou key valu greater weight edg 6 adjac 
min heap contain vertic except vertex 0 1 7 6 step repeat rest node min heap till min heap becom empti c c program prim mst adjac list represent graph includ stdio h includ stdlib h includ limit h structur repres node adjac list struct adjlistnod int dest int weight struct adjlistnod next structur repres adjac liat struct adjlist struct adjlistnod head pointer head node list structur repres graph 
graph array adjac list 
size array v number vertic graph struct graph int v struct adjlist array util function creat new adjac list node struct adjlistnod newadjlistnod int dest int weight struct adjlistnod newnod struct adjlistnod malloc sizeof struct adjlistnod newnod dest dest newnod weight weight newnod next null return newnod util function creat graph v vertic struct graph creategraph int v struct graph graph struct graph malloc sizeof struct graph graph v v creat array adjac list 
size array v graph array struct adjlist malloc v sizeof struct adjlist initi adjac list empti make head null int 0 v graph array head null return graph add edg undirect graph void addedg struct graph graph int src int dest int weight add edg src dest 
new node ad adjac list src 
node ad begin struct adjlistnod newnod newadjlistnod dest weight newnod next graph array src head graph array src head newnod sinc graph undirect add edg dest src also newnod newadjlistnod src weight newnod next graph array dest head graph array dest head newnod structur repres min heap node struct minheapnod int v int key structur repres min heap struct minheap int size number heap node present current int capac capac min heap int po need decreasekey struct minheapnod array util function creat new min heap node struct minheapnod newminheapnod int v int key struct minheapnod minheapnod struct minheapnod malloc sizeof struct minheapnod minheapnod v v minheapnod key key return minheapnod utilit function creat min heap struct minheap createminheap int capac struct minheap minheap struct minheap malloc sizeof struct minheap minheap po int malloc capac sizeof int minheap size 0 minheap capac capac minheap array struct minheapnod malloc capac sizeof struct minheapnod return minheap util function swap two node min heap 
need min heapifi void swapminheapnod struct minheapnod struct minheapnod b struct minheapnod b b standard function heapifi given idx function also updat posit node swap 
posit need decreasekey void minheapifi struct minheap minheap int idx int smallest left right smallest idx left 2 idx 1 right 2 idx 2 left minheap size minheap array left key minheap array smallest key smallest left right minheap size minheap array right key minheap array smallest key smallest right smallest idx node swap min heap minheapnod smallestnod minheap array smallest minheapnod idxnod minheap array idx swap posit minheap po smallestnod v idx minheap po idxnod v smallest swap node swapminheapnod minheap array smallest minheap array idx minheapifi minheap smallest util function check given minheap ampti int isempti struct minheap minheap return minheap size 0 standard function extract minimum node heap struct minheapnod extractmin struct minheap minheap isempti minheap return null store root node struct minheapnod root minheap array 0 replac root node last node struct minheapnod lastnod minheap array minheap size 1 minheap array 0 lastnod updat posit last node minheap po root v minheap size 1 minheap po lastnod v 0 reduc heap size heapifi root minheap size minheapifi minheap 0 return root function decreasi key valu given vertex v function use po min heap get current index node min heap void decreasekey struct minheap minheap int v int key get index v heap array int minheap po v get node updat key valu minheap array key key travel complet tree hepifi 
logn loop minheap array key minheap array 1 2 key swap node parent minheap po minheap array v 1 2 minheap po minheap array 1 2 v swapminheapnod minheap array minheap array 1 2 move parent index 1 2 util function check given vertex v min heap bool isinminheap struct minheap minheap int v minheap po v minheap size return true return fals util function use print construct mst void printarr int arr int n int 1 n printf n arr main function construct minimum span tree mst use prim algorithm void primmst struct graph graph int v graph v get number vertic graph int parent v array store construct mst int key v key valu use pick minimum weight edg cut minheap repres set e struct minheap minheap createminheap v initi min heap vertic 
key valu vertic except 0th vertex initi infinit int v 1 v v v parent v 1 key v int_max minheap array v newminheapnod v key v minheap po v v make key valu 0th vertex 0 extract first key 0 0 minheap array 0 newminheapnod 0 key 0 minheap po 0 0 initi size min heap equal v minheap size v followin loop min heap contain node yet ad mst 
isempti minheap extract vertex minimum key valu struct minheapnod minheapnod extractmin minheap int u minheapnod v store extract vertex number travers adjac vertic u extract vertex updat key valu struct adjlistnod pcrawl graph array u head pcrawl null int v pcrawl dest v yet includ mst weight u v less key valu v updat key valu parent v isinminheap minheap v pcrawl weight key v key v pcrawl weight parent v u decreasekey minheap v key v pcrawl pcrawl next print edg mst printarr parent v driver program test function int main let us creat graph given fugur int v 9 struct graph graph creategraph v addedg graph 0 1 4 addedg graph 0 7 8 addedg graph 1 2 8 addedg graph 1 7 11 addedg graph 2 3 7 addedg graph 2 8 2 addedg graph 2 5 4 addedg graph 3 4 9 addedg graph 3 5 14 addedg graph 4 5 10 addedg graph 5 6 2 addedg graph 6 7 1 addedg graph 6 8 6 addedg graph 7 8 7 primmst graph return 0 output 0 1 5 2 2 3 3 4 6 5 7 6 0 7 2 8 time complex time complex code algorithm look v 2 two nest loop 
take closer look observ statement inner loop execut v e time similar bf 
inner loop decreasekey oper take logv time 
overal time complex e v logv e v logv elogv connect graph v e refer introduct algorithm clifford stein thoma h cormen charl e leiserson ronald l http en wikipedia org wiki prim s_algorithm articl compil aashish barnwal review geeksforgeek team 
pleas write comment find anyth incorrect want share inform topic discuss 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
