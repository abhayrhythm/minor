given unsort array n integ contain integ 1 n element repeat multipl time element absent array 
count frequenc element present print miss element 
exampl input arr 2 3 3 2 5 output frequenc element 1 0 2 2 3 2 4 0 5 1 input arr 4 4 4 4 output frequenc element 1 0 2 0 3 0 4 4 strongli recommend click practic move solut 
simpl solut creat count array size n element rang 1 n solut work n time requir n extra space 
1 extra space n time 
two method solv n time 1 extra space 
method modifi given array achiev 1 extra space 
method 1 make element neg idea travers given array use element index store count index 
exampl see element 7 go index 6 store count 
problem handl one count get mix element handl store count neg 
problem loos element replac count handl first store element replac current index 
algorithm 1 initi 0 2 follow n element alreadi process noth arr 0 continu loop begin find index correspond element exampl index 5 4 b elementindex arr 1 elementindex element process yet first store element arr loos anyth 
c arr elementindex 0 arr arr elementindex store arr elementindex chang store initi count arr ii arr elementindex 1 els first occurr arr increment count 
arr elementindex initi arr 0 mean element 1 seen far ii arr 0 iii 3 arr store count 1 
implement approach 
c c program print frequenc array element 1 extra space n time includ bit stdc h use namespac std function find count element present arr 0 n 1 
array element must rang 1 n void findcount int arr int n travers array element int 0 n element alreadi process noth arr 0 continu find index correspond element exampl index 5 4 int elementindex arr 1 elementindex element process yet first store element arr loos anyth 
arr elementindex 0 arr arr elementindex store arr elementindex chang store initi count arr arr elementindex 1 els first occurr arr increment count 
arr elementindex initi arr 0 mean element 1 seen far arr 0 printf nbelow count element n int 0 n printf n 1 ab arr driver program test function int main int arr 2 3 3 2 5 findcount arr sizeof arr sizeof arr 0 int arr1 1 findcount arr1 sizeof arr1 sizeof arr1 0 int arr3 4 4 4 4 findcount arr3 sizeof arr3 sizeof arr3 0 int arr2 1 3 5 7 9 1 3 5 7 9 1 findcount arr2 sizeof arr2 sizeof arr2 0 int arr4 3 3 3 3 3 3 3 3 3 3 3 findcount arr4 sizeof arr4 sizeof arr4 0 int arr5 1 2 3 4 5 6 7 8 9 10 11 findcount arr5 sizeof arr5 sizeof arr5 0 int arr6 11 10 9 8 7 6 5 4 3 2 1 findcount arr6 sizeof arr6 sizeof arr6 0 return 0 java java program print frequenc array element 1 extra space n time class countfrequ function find count element present arr 0 n 1 
array element must rang 1 n void findcount int arr int n travers array element int 0 n element alreadi process noth arr 0 continu find index correspond element exampl index 5 4 int elementindex arr 1 elementindex element process yet first store element arr loos anyth 
arr elementindex 0 arr arr elementindex store arr elementindex chang store initi count arr arr elementindex 1 els first occurr arr increment count 
arr elementindex initi arr 0 mean element 1 seen far arr 0 system println count element int j 0 j n j system println j 1 math ab arr j driver program test function public static void main string arg countfrequ count new countfrequ int arr 2 3 3 2 5 count findcount arr arr length int arr1 1 count findcount arr1 arr1 length int arr3 4 4 4 4 count findcount arr3 arr3 length int arr2 1 3 5 7 9 1 3 5 7 9 1 count findcount arr2 arr2 length int arr4 3 3 3 3 3 3 3 3 3 3 3 count findcount arr4 arr4 length int arr5 1 2 3 4 5 6 7 8 9 10 11 count findcount arr5 arr5 length int arr6 11 10 9 8 7 6 5 4 3 2 1 count findcount arr6 arr6 length code contribut mayank jaiswal mayank_24 output count element 1 0 2 2 3 2 4 0 5 1 count element 1 1 count element 1 0 2 0 3 0 4 4 count element 1 3 2 0 3 2 4 0 5 2 6 0 7 2 8 0 9 2 10 0 11 0 count element 1 0 2 0 3 11 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 count element 1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 1 10 1 11 1 count element 1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 1 10 1 11 1 program work 
let us take exampl see step step process program arr 2 3 3 2 5 0 arr 2 arr 2 3 3 2 5 sinc arr 0 find elementindex 
elementindex arr 1 2 1 1 arr elementindex arr 1 3 sinc arr elementindex postiv arr arr elementindex 3 arr elementindex 1 2 seen 1 time far chang 
0 arr 3 arr 3 1 3 2 5 sinc arr 0 find elementindex 
elementindex arr 1 3 1 2 arr elementindex arr 2 3 sinc arr elementindex postiv arr arr elementindex 3 arr elementindex 1 3 seen 1 time far chang 
0 arr 3 arr 3 1 1 2 5 sinc arr 0 find elementindex 
elementindex arr 1 3 1 2 arr elementindex arr 2 1 sinc arr elementindex neg arr elementindex arr elementindex 1 2 3 seen 2 time far arr 0 1 seen far increment 1 arr 1 arr 0 1 2 2 5 sinc arr neg increment 2 arr 2 arr 0 1 2 2 5 sinc arr neg increment 3 arr 2 arr 0 1 2 2 5 sinc arr 0 find elementindex 
elementindex arr 1 2 1 1 arr elementindex arr 1 1 sinc arr elementindex neg arr elementindex arr elementindex 1 2 2 seen 2 time far arr 0 4 seen far increment 4 arr 5 arr 0 2 2 0 5 sinc arr 0 find elementindex 
elementindex arr 1 5 1 4 arr elementindex arr 4 5 sinc arr elementindex postiv arr arr elementindex 4 arr elementindex 1 5 seen 1 time far chang 
1 arr 1 arr 0 2 2 0 1 sinc arr neg increment 
