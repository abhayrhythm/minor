comb sort mainli improv bubbl sort 
bubbl sort alway compar adjac valu 
invers remov one one 
comb sort improv bubbl sort use gap size 1 gap start larg valu shrink factor 1 3 everi iter reach valu 1 thu comb sort remov one invers count one swap perform better bubll sort 
shrink factor empir found 1 3 test combsort 200 000 random list sourc wiki although work better bubbl sort averag worst case remain n2 
c implement 
c c implement comb sort includ bit stdc h use namespac std find gap element int getnextgap int gap shrink gap shrink factor gap gap 10 13 gap 1 return 1 return gap function sort 0 n 1 use comb sort void combsort int int n initi gap int gap n initi swap true make sure loop run bool swap true keep run gap 1 last iter caus swap gap 1 swap true find next gap gap getnextgap gap initi swap fals check swap happen swap fals compar element current gap int 0 n gap gap swap gap swap true driver program int main int 8 4 1 56 3 44 23 6 28 0 int n sizeof sizeof 0 combsort n printf sort array n int 0 n printf return 0 java java program implement comb sort class combsort find gap element int getnextgap int gap shrink gap shrink factor gap gap 10 13 gap 1 return 1 return gap function sort arr use comb sort void sort int arr int n arr length initi gap int gap n initi swap true make sure loop run boolean swap true keep run gap 1 last iter caus swap gap 1 swap true find next gap gap getnextgap gap initi swap fals check swap happen swap fals compar element current gap int 0 n gap arr arr gap swap arr arr gap arr arr gap arr gap arr arr arr gap set swap swap true driver method public static void main string arg combsort ob new combsort int arr 8 4 1 56 3 44 23 6 28 0 ob sort arr system println sort array int 0 arr length system print arr code contribut rajat mishra python python program implement combsort find next gap current def getnextgap gap shrink gap shrink factor gap gap 10 13 gap 1 return 1 return gap function sort arr use comb sort def combsort arr n len arr initi gap gap n initi swap true make sure loop run swap true keep run gap 1 last iter caus swap gap 1 swap 1 find next gap gap getnextgap gap initi swap fals check swap happen swap fals compar element current gap rang 0 n gap arr arr gap arr arr gap arr gap arr swap true driver code test arr 8 4 1 3 44 23 6 28 0 combsort arr print sort array rang len arr print arr code contribut mohit kumra output 
