given perfect binari tree revers altern level node binari tree 
given tree b c e f g h j k l n modifi tree c b e f g n l k j h strongli recommend minim browser tri first 
method 1 simpl simpl solut follow step 
1 access node level level 
2 current level odd store node level array 
3 revers array store element back tree 
method 2 use two travers anoth two inord travers 
follow step follow 
1 travers given tree inord fashion store odd level node auxiliari array 
exampl given tree content array becom h b j k l c n 2 revers array 
array becom n c l k j b h 3 travers tree inord fashion 
travers tree one one take element array store element array everi odd level travers node 
exampl travers h first array replac h 
travers replac n follow implement algorithm 
c c program revers altern level binari tree includ iostream defin max 100 use namespac std binari tree node struct node char data struct node left right util function creat new binari tree node struct node newnod char item struct node temp new node temp data item temp left temp right null return temp function store node altern level array void storealtern node root char arr int index int l base case root null return store element left subtre storealtern root left arr index l 1 store node odd level node l 2 0 arr index root data index store element right subtre storealtern root right arr index l 1 function modifi binari tree odd level node updat take element array inord fashion void modifytre node root char arr int index int l base case root null return updat node left subtre modifytre root left arr index l 1 updat node odd level node l 2 0 root data arr index index updat node right subtre modifytre root right arr index l 1 util function revers array index 0 n 1 void revers char arr int n int l 0 r n 1 l r int temp arr l arr l arr r arr r temp l r main function revers altern node binari tree void reversealtern struct node root creat auxiliari array store node altern level char arr new char max int index 0 first store node altern level storealtern root arr index 0 revers array revers arr index updat tree take element array index 0 modifytre root arr index 0 util function print indord travers binari tree void printinord struct node root root null return printinord root left cout root data printinord root right driver program test function int main struct node root newnod root left newnod b root right newnod c root left left newnod root left right newnod e root right left newnod f root right right newnod g root left left left newnod h root left left right newnod root left right left newnod j root left right right newnod k root right left left newnod l root right left right newnod root right right left newnod n root right right right newnod cout inord travers given tree n printinord root reversealtern root cout n ninord travers modifi tree n printinord root return 0 java java program revers altern level perfect binari tree binari tree node class node char data node left right node char item data item left right null class access index valu refer class index int index class binarytre node root index index_obj new index function store altern level tree void storealtern node node char arr index index int l base case node null return store element left subtre storealtern node left arr index l 1 store node level odd l 2 0 arr index index node data index index storealtern node right arr index l 1 function modifi binari tree odd level node updat take element array inord fashion void modifytre node node char arr index index int l base case node null return updat node left subtre modifytre node left arr index l 1 updat node odd level node l 2 0 node data arr index index index index updat node right subtre modifytre node right arr index l 1 util function revers array index 0 n 1 void revers char arr int n int l 0 r n 1 l r char temp arr l arr l arr r arr r temp l r void reversealtern reversealtern root main function revers altern node binari tree void reversealtern node node creat auxiliari array store node altern level char arr new char 100 first store node altern level storealtern node arr index_obj 0 index_obj index 0 revers array revers arr index_obj index updat tree take element array index_obj index 0 modifytre node arr index_obj 0 void printinord printinord root util function print indord travers binari tree void printinord node node node null return printinord node left system print node data printinord node right driver program test function public static void main string arg binarytre tree new binarytre tree root new node tree root left new node b tree root right new node c tree root left left new node tree root left right new node e tree root right left new node f tree root right right new node g tree root left left left new node h tree root left left right new node tree root left right left new node j tree root left right right new node k tree root right left left new node l tree root right left right new node tree root right right left new node n tree root right right right new node system println inord travers given tree tree printinord tree reversealtern system println system println system println inord travers modifi tree tree printinord code contribut mayank jaiswal output inord travers given tree h b j e k l f c n g inord travers modifi tree n c e l k f j b g h time complex solut n two inord travers binari tree 
method 3 use one travers c program revers altern level tree includ bit stdc h use namespac std struct node char key node left right void preorder struct node root1 struct node root2 int lvl base case root1 null root2 null return swap subtre level even lvl 2 0 swap root1 key root2 key recur left right subtre note left root1 pass right root2 first call opposit second call 
preorder root1 left root2 right lvl 1 preorder root1 right root2 left lvl 1 function call preorder left right children root void reversealtern struct node root preorder root left root right 0 inord travers use print initi modifi tree void printinord struct node root root null return printinord root left cout root key printinord root right util function creat new node node newnod int key node temp new node temp left temp right null temp key key return temp driver program test function int main struct node root newnod root left newnod b root right newnod c root left left newnod root left right newnod e root right left newnod f root right right newnod g root left left left newnod h root left left right newnod root left right left newnod j root left right right newnod k root right left left newnod l root right left right newnod root right right left newnod n root right right right newnod cout inord travers given tree n printinord root reversealtern root cout n ninord travers modifi tree n printinord root return 0 output inord travers given tree h b j e k l f c n g inord travers modifi tree n c e l k f j b g h thank soumyajit bhattacharyay suggest solut 
articl contribut kripal gaurav 
pleas write comment find anyth incorrect want share inform topic discuss 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
