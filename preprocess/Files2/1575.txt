given binari tree find maximum path sum 
path may start end node tree 
exampl input root tree 1 2 3 output 6 see diagram anoth exampl 
1 2 3 strongli recommend minim browser tri first 
node four way max path goe node 1 node 2 max path left child node 3 max path right child node 4 max path left child node max path right child idea keep trace four path pick max one end 
import thing note root everi subtre need return maximum path sum one child root involv 
need parent function call 
code sum store max_singl return recurs function 
c c c program find maximum path sum binari tree includ bit stdc h use namespac std binari tree node struct node int data struct node left right util function alloc new node struct node newnod int data struct node newnod new node newnod data data newnod left newnod right null return newnod function return overal maximum path sum re return max path sum go root 
int findmaxutil node root int re base case root null return 0 l r store maximum path sum go left right child root respect int l findmaxutil root left re int r findmaxutil root right re max path parent call root 
path must includ one child root int max_singl max max l r root data root data max top repres sum node consider root maxsum path ancestor root max sum path int max_top max max_singl l r root data re max re max_top store maximum result 
return max_singl return maximum path sum tree given root int findmaxsum node root initi result int re int_min comput return result findmaxutil root re return re driver program int main void struct node root newnod 10 root left newnod 2 root right newnod 10 root left left newnod 20 root left right newnod 1 root right right newnod 25 root right right left newnod 3 root right right right newnod 4 cout max path sum findmaxsum root return 0 java java program find maximum path sum binari tree class contain left right child current node key valu class node int data node left right public node int item data item left right null object re pass around valu use multipl recurs call 
class re public int val class binarytre root binari tree node root function return overal maximum path sum re return max path sum go root 
int findmaxutil node node re re base case node null return 0 l r store maximum path sum go left right child root respect int l findmaxutil node left re int r findmaxutil node right re max path parent call root 
path must includ one child root int max_singl math max math max l r node data node data max top repres sum node consider root maxsum path ancestor root max sum path int max_top math max max_singl l r node data store maximum result 
re val math max re val max_top return max_singl int findmaxsum return findmaxsum root return maximum path sum tree given root int findmaxsum node node initi result int res2 integ min_valu re re new re re val integ min_valu comput return result findmaxutil node re return re val driver program test function public static void main string arg binarytre tree new binarytre tree root new node 10 tree root left new node 2 tree root right new node 10 tree root left left new node 20 tree root left right new node 1 tree root right right new node 25 tree root right right left new node 3 tree root right right right new node 4 system println maximum path sum tree findmaxsum python python program find maximum path sum binari tree binari tree node class node contructor creat new node def __init__ self data self data data self left none self right none function return overal maximum path sum re return max path sum go root def findmaxutil root base case root none return 0 l r store maximum path sum go left right child root respet l findmaxutil root left r findmaxutil root right max path parent call root 
path must includ one child root max_singl max max l r root data root data max top repres sum node consider root maxsum path ancestor root max sum path max_top max max_singl l r root data static variabl store chang store maximum result findmaxutil re max findmaxutil re max_top return max_singl return maximum path sum tree given root def findmaxsum root initi result findmaxutil re float inf comput return result findmaxutil root return findmaxutil re driver program root node 10 root left node 2 root right node 10 root left left node 20 root left right node 1 root right right node 25 root right right left node 3 root right right right node 4 print max path sum findmaxsum root code contribut nikhil kumar singh nickzuck_007 output max path sum 42 time complex n n number node binari tree 
articl contribut anmol varshney fb profil http www facebook com anmolvarshney695 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
