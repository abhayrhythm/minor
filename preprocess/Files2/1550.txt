perfect binari tree use specif level order travers set 1 earlier travers top bottom 
post bottom top travers ask amazon interview set 120 round 1 discuss 
16 31 17 30 18 29 19 28 20 27 21 26 22 25 23 24 8 15 9 14 10 13 11 12 4 7 5 6 2 3 1 task print node level order node left right side altern bottom manner 5th level 16 left 31 right 17 left 30 right print 
4th level 8 left 15 right 9 left 14 right print 
3rd level 4 left 7 right 5 left 6 right print 
1st 2nd level trivial 
strongli recommend minim browser tri first 
standard level order travers idea slightli chang 
instead process one node time process two node time 
dequeu node push node left right child stack follow manner 2nd node left child 1st node right child 2nd node right child 1st node left child 
push children queue enqueu order 1st node right child 2nd node left child 1st node left child 2nd node right child 
also process two queue node 
final pop node stack print 
c c program special order travers includ bit stdc h use namespac std binari tree node data pointer left child pointer right child struct node int data node left right helper function alloc new node given data null left right pointer 
node newnod int data node node new node node data data node right node left null return node void printspecificlevelorderutil node root stack node root null return creat queue enqueu left right children root queue node q q push root left q push root right process two node time need two variabl store two front item queue node first null second null travers loop q empti pop two item queue first q front q pop second q front q pop push first second node chilren revers order push second left push first right push second right push first left first second grandchildren enqueu specif order first left left null q push first right q push second left q push first left q push second right given perfect binari tree print node specif level order void printspecificlevelord node root creat stack push root stack node push level 1 level 2 node stack push root sinc perfect binari tree right check root left null push root right push root left anyth node next level given perfect binari tree root left left null printspecificlevelorderutil root final pop node stack print 
empti cout top data pop driver program test function int main perfect binari tree height 4 node root newnod 1 root left newnod 2 root right newnod 3 root left left newnod 4 root left right newnod 5 root right left newnod 6 root right right newnod 7 root left left left newnod 8 root left left right newnod 9 root left right left newnod 10 root left right right newnod 11 root right left left newnod 12 root right left right newnod 13 root right right left newnod 14 root right right right newnod 15 root left left left left newnod 16 root left left left right newnod 17 root left left right left newnod 18 root left left right right newnod 19 root left right left left newnod 20 root left right left right newnod 21 root left right right left newnod 22 root left right right right newnod 23 root right left left left newnod 24 root right left left right newnod 25 root right left right left newnod 26 root right left right right newnod 27 root right right left left newnod 28 root right right left right newnod 29 root right right right left newnod 30 root right right right right newnod 31 cout specif level order travers binari tree n printspecificlevelord root return 0 java java program special order travers import java util 
binari tree node data pointer left child pointer right child class node int data node left right public node int data data data left right null class binarytre node root void printspecificlevelorderutil node root stack node root null return creat queue enqueu left right children root queue node q new linkedlist node q add root left q add root right process two node time need two variabl store two front item queue node first null second null travers loop q isempti pop two item queue first q peek q poll second q peek q poll push first second node chilren revers order push second left push first right push second right push first left first second grandchildren enqueu specif order first left left null q add first right q add second left q add first left q add second right given perfect binari tree print node specif level order void printspecificlevelord node root creat stack push root stack node new stack node push level 1 level 2 node stack push root sinc perfect binari tree right check root left null push root right push root left anyth node next level given perfect binari tree root left left null printspecificlevelorderutil root final pop node stack print 
empti system print peek data pop driver program test function public static void main string arg binarytre tree new binarytre tree root new node 1 tree root left new node 2 tree root right new node 3 tree root left left new node 4 tree root left right new node 5 tree root right left new node 6 tree root right right new node 7 tree root left left left new node 8 tree root left left right new node 9 tree root left right left new node 10 tree root left right right new node 11 tree root right left left new node 12 tree root right left right new node 13 tree root right right left new node 14 tree root right right right new node 15 tree root left left left left new node 16 tree root left left left right new node 17 tree root left left right left new node 18 tree root left left right right new node 19 tree root left right left left new node 20 tree root left right left right new node 21 tree root left right right left new node 22 tree root left right right right new node 23 tree root right left left left new node 24 tree root right left left right new node 25 tree root right left right left new node 26 tree root right left right right new node 27 tree root right right left left new node 28 tree root right right left right new node 29 tree root right right right left new node 30 tree root right right right right new node 31 system println specif level order travers binari tree tree printspecificlevelord tree root code contribut mayank jaiswal mayank_24 output specif level order travers binari tree 2 3 1 articl contribut aditya goel 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
