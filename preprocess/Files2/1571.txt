succinct encod binari tree take close minimum possibl space 
number structur differ binari tree n node n th catalan number 
larg n 4n thu need least log2 4 n 2n bit encod 
succinct binari tree therefor would occupi 2n n bit 
one simpl represent meet bound visit node tree preorder output 1 intern node 0 leaf 
tree contain data simpli simultan store consecut array preorder 
algorithm encod function encodesuccinct node n bitstr structur array data n nil append 0 structur els append 1 structur append n data data encodesuccinct n left structur data encodesuccinct n right structur data algorithm decod function decodesuccinct bitstr structur array data remov first bit structur put b b 1 creat new node n remov first element data put n data n left decodesuccinct structur data n right decodesuccinct structur data return n els return nil sourc http en wikipedia org wiki binary_tre succinct_encod exampl input 10 20 30 40 50 70 data array contain preorder travers 10 20 40 50 30 70 structur array 1 1 1 0 0 1 0 0 1 0 1 0 0 1 indic data 0 indic null c implement algorithm 
c c program demonstr succinct tree encod decod includ bit stdc h use namespac std binari tree node struct node int key struct node left right util function creat new node node newnod int key node temp new node temp key key temp left temp right null return temp function fill list struc data 
struc list store structur inform 
data list store tree data void encodesuccinct node root list bool struc list int data root null put 0 structur array return root null struc push_back 0 return els place 1 structur array key data array recur left right children struc push_back 1 data push_back root key encodesuccinct root left struc data encodesuccinct root right struc data construct tree struc data node decodesuccinct list bool struc list int data struc size 0 return null remov one item structur list bool b struc front struc pop_front remov bit 1 b 1 remov item data list int key data front data pop_front creat tree node remov data node root newnod key recur creat left right subtre root left decodesuccinct struc data root right decodesuccinct struc data return root return null util function print tree void preorder node root root cout key root key root left cout left child root left key root right cout right child root right key cout endl preorder root left preorder root right driver program int main let us construct tree shown figur node root newnod 10 root left newnod 20 root right newnod 30 root left left newnod 40 root left right newnod 50 root right right newnod 70 cout given tree n preorder root list bool struc list int data encodesuccinct root struc data cout nencod tree n cout structur list n list bool iter si structur iter si struc begin si struc end si cout si cout ndata list n list int iter di data iiter di data begin di data end di cout di node newroot decodesuccinct struc data cout n npreorder travers decod tree n preorder newroot return 0 python python program demonstr succient tree encod decod node structur class node util function creat new node def __init__ self key self key key self left none self right none def encodesuccint root struc data root none put 0 structur array return root none struc append 0 return els place 1 structur array key data array recur left right children struc append 1 data append root key encodesuccint root left struc data encodesuccint root right struc data construct tree struc data def decodesuccinct struc data len struc 0 return none remov one item structur list b struc 0 struc pop 0 remov bit 1 b 1 key data 0 data pop 0 creat tree node remov data root node key recur creat left right subtre root left decodesuccinct struc data root right decodesuccinct struc data return root return none def preorder root root none print key root key root left none print left child root left key root right none print right child root right key print preorder root left preorder root right driver program root node 10 root left node 20 root right node 30 root left left node 40 root left right node 50 root right right node 70 print given tree preorder root struc data encodesuccint root struc data print nencod tree print structur list struc print print ndatalist valu data print valu newroot decodesuccinct struc data print n npreorder travers decod tree preorder newroot code contribut nikhil kumar singh nickzuck_007 output given tree key 10 left child 20 right child 30 key 20 left child 40 right child 50 key 40 key 50 key 30 right child 70 key 70 encod tree structur list 1 1 1 0 0 1 0 0 1 0 1 0 0 data list 10 20 40 50 30 70 preorder travers decod tree key 10 left child 20 right child 30 key 20 left child 40 right child 50 key 40 key 50 key 30 right child 70 key 70 articl contribut shivam 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
