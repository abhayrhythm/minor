given binari tree check whether mirror 
exampl binari tree symmetr 1 2 2 3 4 4 3 follow 1 2 2 3 3 strongli recommend minim browser tri first 
idea write recurs function ismirror take two tree argument return true tree mirror fals tree mirror 
ismirror function recurs check two root subtre root 
implement algorithm 
c c program check given binari tree symmetr includ bit stdc h use namespac std binari tree node struct node int key struct node left right util function creat new node node newnod int key node temp new node temp key key temp left temp right null return temp return true tree root root1 root2 mirror bool ismirror struct node root1 struct node root2 tree emptu mirror imag root1 null root2 null return true two tree mirror imag follow three condit must true 1 root node key must 2 left subtre left tree right subtre right tree mirror imag 3 right subtre left tree left subtre right tree mirror imag root1 root2 root1 key root2 key return ismirror root1 left root2 right ismirror root1 right root2 left neither condit true root1 root2 mirror imag return fals return true tree symmetr e 
mirror imag bool issymmetr struct node root check tre mirror return ismirror root root driver program int main let us construct tree shown figur node root newnod 1 root left newnod 2 root right newnod 2 root left left newnod 3 root left right newnod 4 root right left newnod 4 root right right newnod 3 cout issymmetr root return 0 java java program check binari tree symmetr class node int key node left right node int item key item left right null class binarytre node root return true tree root root1 root2 mirror boolean ismirror node node1 node node2 tree empti mirror imag node1 null node2 null return true two tree mirror imag follow three condit must true 1 root node key must 2 left subtre left tree right subtre right tree mirror imag 3 right subtre left tree left subtre right tree mirror imag node1 null node2 null node1 key node2 key return ismirror node1 left node2 right ismirror node1 right node2 left neither condit true root1 root2 mirror imag return fals return true tree symmetr e mirror imag boolean issymmetr node node check tree mirror return ismirror root root driver program public static void main string arg binarytre tree new binarytre tree root new node 1 tree root left new node 2 tree root right new node 2 tree root left left new node 3 tree root left right new node 4 tree root right left new node 4 tree root right right new node 3 boolean output tree issymmetr tree root output true system println 1 els system println 0 code contribut mayank jaiswal python python program check given binari tree symmetr node structur class node util function creat new node def __init__ self key self key key self left none self right none return true tree root root1 root 2 mirror def ismirror root1 root2 tree empti mirror imag root1 none root2 none return true two tree mirror imag follow three condit must true 1 root node key must 2 left subtre left tree right subtre right tree mirror imag 3 right subtre left tree left subtre right tree mirror imag root1 none root2 none root1 key root2 key return ismirror root1 left root2 right ismirror root1 right root2 left neither condit true root1 root2 mirror imag return fals def issymmetr root check tree mirror return ismirror root root driver program let construct tree show figur root node 1 root left node 2 root right node 2 root left left node 3 root left right node 4 root right left node 4 root right right node 3 print 1 issymmetr root true els 0 code contribut nikhil kumar singh nickzuck_007 output 1 articl contribut muneer ahm 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
