given k sort array size n merg print sort output 
exampl input k 3 n 4 arr 1 3 5 7 2 4 6 8 0 9 10 11 output 0 1 2 3 4 5 6 7 8 9 10 11 simpl solut creat output array size n k one one copi array 
final sort output array use nlogn sort algorithm 
approach take nklognk time 
merg array nk logk time use min heap 
follow detail algorithm 
1 creat output array size n k 2 creat min heap size k insert 1st element array heap 3 repeat follow step n k time 
get minimum element heap minimum alway root store output array 
b replac heap root next element array element extract 
array element replac root infinit 
replac root heapifi tree 
follow c implement algorithm 
c program merg k sort array size n 
includ iostream includ limit h use namespac std defin n 4 min heap node struct minheapnod int element element store int index array element taken int j index next element pick array prototyp util function swap two min heap node void swap minheapnod x minheapnod class min heap class minheap minheapnod harr pointer array element heap int heap_siz size min heap public constructor creat min heap given size minheap minheapnod int size heapifi subtre root given index void minheapifi int get index left child node index int left int return 2 1 get index right child node index int right int return 2 2 get root minheapnod getmin return harr 0 replac root new node x heapifi new root void replacemin minheapnod x harr 0 x minheapifi 0 function take array array argument array assum sort 
merg togeth print final sort output 
int mergekarray int arr n int k int output new int n k store output array creat min heap k heap node 
everi heap node first element array minheapnod harr new minheapnod k int 0 k harr element arr 0 store first element harr index array harr j 1 index next element store array minheap hp harr k creat heap one one get minimum element min heap replac next element array int count 0 count n k count get minimum element store output minheapnod root hp getmin output count root element find next elel replac current root heap 
next element belong array current root 
root j n root element arr root root j root j 1 root last element array els root element int_max int_max infinit replac root next element array hp replacemin root return output follow implement standard min heap method cormen book constructor build heap given array given size minheap minheap minheapnod int size heap_siz size harr store address array int heap_siz 1 2 0 minheapifi recurs method heapifi subtre root given index method assum subtre alreadi heapifi void minheap minheapifi int int l left int r right int smallest l heap_siz harr l element harr element smallest l r heap_siz harr r element harr smallest element smallest r smallest swap harr harr smallest minheapifi smallest util function swap two element void swap minheapnod x minheapnod minheapnod temp x x temp util function print array element void printarray int arr int size int 0 size cout arr driver program test function int main chang n top chang number element array int arr n 2 6 12 34 1 9 20 1000 23 34 90 2000 int k sizeof arr sizeof arr 0 int output mergekarray arr k cout merg array endl printarray output n k return 0 output merg array 1 2 6 9 12 20 23 34 34 90 1000 2000 time complex main step 3rd step loop run n k time 
everi iter loop call heapifi take logk time 
therefor time complex nk logk 
interest method merg k sort array nklogk sonn discuss separ post 
thank vignesh suggest problem initi solut 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
