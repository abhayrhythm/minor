
In C, array parameters are treated as pointers. The following two definitions of foo() look different, but to the compiler they mean exactly the same thing.  It’s preferable to use whichever syntax is more accurate for readability. If the pointer coming in really is the base address of a whole array, then we should use [ ].

void foo(int arr_param[]) 
{

  /* Silly but valid. Just changes the local pointer */
  arr_param = NULL; 
}

void foo(int *arr_param) 
{

  /* ditto */
  arr_param = NULL; 
}

Array parameters treated as pointers because of efficiency. It is inefficient to copy the array data in terms of both memory and time; and most of the times, when we pass an array our intention is to just tell the array we interested in, not to create a copy of the array.
Asked by Shobhit
References:
http://cslibrary.stanford.edu/101/EssentialC.pdf




(adsbygoogle = window.adsbygoogle || []).push({});


Company Wise Coding Practice
   Topic Wise Coding Practice
