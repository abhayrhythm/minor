given binari tree write iter function print preorder travers given binari tree 
refer recurs preorder travers binari tree 
convert inher recurs procedur iter need explicit stack 
follow simpl stack base iter process print preorder travers 
1 creat empti stack nodestack push root node stack 
2 follow nodestack empti 
pop item stack print 
b push right child pop item stack c push left child pop item stack right child push left child make sure left subtre process first 
c includ stdlib h includ stdio h includ iostream includ stack use namespac std binari tree node data left child right child struct node int data struct node left struct node right helper function alloc new node given data null left right pointer 
struct node newnod int data struct node node new struct node node data data node left null node right null return node iter process print preorder travers binari tree void iterativepreord node root base case root null return creat empti stack push root stack node nodestack nodestack push root pop item one one 
follow everi pop item print b push right child c push left child note right child push first left process first nodestack empti fals pop top item stack print struct node node nodestack top printf node data nodestack pop push right left children pop node stack node right nodestack push node right node left nodestack push node left driver program test function int main construct binari tree 10 8 2 3 5 2 struct node root newnod 10 root left newnod 8 root right newnod 2 root left left newnod 3 root left right newnod 5 root right left newnod 2 iterativepreord root return 0 java java program implement iter preorder travers import java util stack binari tree node class node int data node left right node int item data item left right null class binarytre node root void iterativepreord iterativepreord root iter process print preorder travers binari tree void iterativepreord node node base case node null return creat empti stack push root stack node nodestack new stack node nodestack push root pop item one one 
follow everi pop item print b push right child c push left child note right child push first left process first nodestack empti fals pop top item stack print node mynod nodestack peek system print mynod data nodestack pop push right left children pop node stack mynod right null nodestack push mynod right mynod left null nodestack push mynod left driver program test function public static void main string arg binarytre tree new binarytre tree root new node 10 tree root left new node 8 tree root right new node 2 tree root left left new node 3 tree root left right new node 5 tree root right left new node 2 tree iterativepreord code contribut mayank jaiswal python python program perform iter preorder travers binari tree node class node constructor creat new node def __init__ self data self data data self left none self right none iter process print preorder traver bt def iterativepreord root base case root none return creat empti stack push root nodestack nodestack append root pop item one one 
follow everi pop item print b push right child c push left child note right child push first left process first len nodestack 0 pop top item stack print node nodestack pop print node data push right left children pop node stack node right none nodestack append node right node left none nodestack append node left driver program test function root node 10 root left node 8 root right node 2 root left left node 3 root left right node 5 root right left node 2 iterativepreord root code contribut nikhil kumar singh nickzuck_007 output 10 8 3 5 2 2 articl compil saurabh sharma review geeksforgeek team 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
