given undirect graph check cycl graph 
exampl follow graph cycl 1 0 2 1 discuss cycl detect direct graph 
also discuss union find algorithm cycl detect undirect graph 
time complex union find algorithm elogv 
like direct graph use df detect cycl undirect graph v e time 
df travers given graph 
everi visit vertex v adjac u u alreadi visit u parent v cycl graph 
find adjac vertex say cycl 
assumpt approach parallel edg two vertic 
c c program detect cycl undirect graph includ iostream includ list includ limit h use namespac std class undirect graph class graph int v 
vertic list int adj pointer array contain adjac list bool iscyclicutil int v bool visit int parent public graph int v constructor void addedg int v int w add edg graph bool iscycl return true cycl graph graph int v v v adj new list int v void graph addedg int v int w adj v push_back w add w v list 
adj w push_back v add v w list 
recurs function use visit parent detect cycl subgraph reachabl vertex v bool graph iscyclicutil int v bool visit int parent mark current node visit visit v true recur vertic adjac vertex list int iter adj v begin adj v end adjac visit recur adjac visit iscyclicutil visit v return true adjac visit parent current vertex cycl 
els parent return true return fals return true graph contain cycl els fals 
bool graph iscycl mark vertic visit part recurs stack bool visit new bool v int 0 v visit fals call recurs helper function detect cycl differ df tree int u 0 u v u visit u recur u alreadi visit iscyclicutil u visit 1 return true return fals driver program test function int main graph g1 5 g1 addedg 1 0 g1 addedg 0 2 g1 addedg 2 0 g1 addedg 0 3 g1 addedg 3 4 g1 iscycl 
cout graph contain cycl n cout graph contain cycl n graph g2 3 g2 addedg 0 1 g2 addedg 1 2 g2 iscycl 
cout graph contain cycl n cout graph contain cycl n return 0 java java program detect cycl undirect graph import java io 
import java util 
class repres direct graph use adjac list represent class graph privat int v 
vertic privat linkedlist integ adj adjac list represnt constructor graph int v v v adj new linkedlist v int 0 v adj new linkedlist function add edg graph void addedg int v int w adj v add w adj w add v recurs function use visit parent detect cycl subgraph reachabl vertex v boolean iscyclicutil int v boolean visit int parent mark current node visit visit v true integ recur vertic adjac vertex iter integ adj v iter hasnext next adjac visit recur adjac visit iscyclicutil visit v return true adjac visit parent current vertex cycl 
els parent return true return fals return true graph contain cycl els fals 
boolean iscycl mark vertic visit part recurs stack boolean visit new boolean v int 0 v visit fals call recurs helper function detect cycl differ df tree int u 0 u v u visit u recur u alreadi visit iscyclicutil u visit 1 return true return fals driver method test method public static void main string arg creat graph given diagram graph g1 new graph 5 g1 addedg 1 0 g1 addedg 0 2 g1 addedg 2 0 g1 addedg 0 3 g1 addedg 3 4 g1 iscycl system println graph contain cycl els system println graph contain cycl graph g2 new graph 3 g2 addedg 0 1 g2 addedg 1 2 g2 iscycl system println graph contain cycl els system println graph contain cycl code contribut aakash hasija output graph contain cycl graph contain cycl time complex program simpl df travers graph graph repres use adjac list 
time complex v e exercis use bf detect cycl undirect graph v e time 
direct graph 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
