given link list two key swap node two given key 
node swap chang link 
swap data node may expens mani situat data contain mani field 
may assum key link list distinct 
exampl input 10 15 12 13 20 14 x 12 20 output 10 15 20 13 12 14 input 10 15 12 13 20 14 x 10 20 output 20 15 12 13 10 14 input 10 15 12 13 20 14 x 12 13 output 10 15 13 12 20 14 may look simpl problem interest question follow case handl 
1 x may may adjac 
2 either x may head node 
3 either x may last node 
4 x may present link list 
write clean work code handl possibl 
strongli recommend minim browser tri first 
idea first search x given link list 
present return 
search x keep track current previou pointer 
first chang next previou pointer chang next current pointer 
follow c java implement approach 
c program swap node link list rather swap field node 
includ stdio h includ stdlib h link list node struct node int data struct node next function swap node x link list chang link void swapnod struct node head_ref int x int noth x x return search x keep track prevx currx struct node prevx null currx head_ref currx currx data x prevx currx currx currx next search keep track previ curri struct node previ null curri head_ref curri curri data previ curri curri curri next either x present noth currx null curri null return x head link list prevx null prevx next curri els els make new head head_ref curri head link list previ null previ next currx els els make x new head head_ref currx swap next pointer struct node temp curri next curri next currx next currx next temp function add node begin list void push struct node head_ref int new_data alloc node struct node new_nod struct node malloc sizeof struct node put data new_nod data new_data link old list new node new_nod next head_ref move head point new node head_ref new_nod function print node given link list void printlist struct node node node null printf node data node node next druver program test function int main struct node start null construct link list 1 2 3 4 5 6 7 push start 7 push start 6 push start 5 push start 4 push start 3 push start 2 push start 1 printf n link list call swapnod printlist start swapnod start 4 3 printf n link list call swapnod printlist start return 0 java java program swap two given node link list class node int data node next node int data next null class linkedlist node head head list function swap node x link list chang link public void swapnod int x int noth x x return search x keep track prevx currx node prevx null currx head currx null currx data x prevx currx currx currx next search keep track previ curri node previ null curri head curri null curri data previ curri curri curri next either x present noth currx null curri null return x head link list prevx null prevx next curri els make new head head curri head link list previ null previ next currx els make x new head head currx swap next pointer node temp currx next currx next curri next curri next temp function add node begin list 
public void push int new_data 1 alloc node put data node new_nod new node new_data 2 make next new node head new_nod next head 3 move head point new node head new_nod function print content link list start given node public void printlist node tnode head tnode null system print tnode data tnode tnode next druver program test function public static void main string arg linkedlist llist new linkedlist construct link list 1 2 3 4 5 6 7 llist push 7 llist push 6 llist push 5 llist push 4 llist push 3 llist push 2 llist push 1 system print n link list call swapnod llist printlist llist swapnod 4 3 system print n link list call swapnod llist printlist code contribut rajat mishra python python program swap two given node link list class linkedlist object def __init__ self self head none head list class node object def __init__ self self data self next none function swap node x link list chang link def swapnod self x noth x x return search x keep track prevx currx prevx none currx self head currx none currx data x prevx currx currx currx next search keep track previ curri previ none curri self head curri none curri data previ curri curri curri next either x present noth currx none curri none return x head link list prevx none prevx next curri els make new head self head curri head link list previ none previ next currx els make x new head self head currx swap next pointer temp currx next currx next curri next curri next temp function add node begin list 
def push self new_data 1 alloc node put data new_nod self node new_data 2 make next new node head new_nod next self head 3 move head point new node self head new_nod function print content link list start given node def printlist self tnode self head tnode none print tnode data tnode tnode next driver program test function llist linkedlist construct link list 1 2 3 4 5 6 7 llist push 7 llist push 6 llist push 5 llist push 4 llist push 3 llist push 2 llist push 1 print link list call swapnod llist printlist llist swapnod 4 3 print nlink list call swapnod llist printlist code contribut bhavya jain output link list call swapnod 1 2 3 4 5 6 7 link list call swapnod 1 2 4 3 5 6 7 optim code optim search x singl travers 
two loop use keep program simpl 
articl contribut gautam 
pleas write comment find anyth incorrect want share inform topic discuss 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
