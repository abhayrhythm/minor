given path form rectangular matrix landmin arbitrarili place mark 0 calcul length shortest safe rout possibl cell first column cell last column matrix 
avoid landmin four adjac cell left right also unsaf 
allow move adjac cell landmin 
e 
rout cannot contain diagon move 
exampl input 12 x 10 matrix landmin mark 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 output length shortest safe rout 13 highlight bold idea use backtrack 
first mark adjac cell landmin unsaf 
safe cell first column matrix move forward allow direct recurs check lead destin 
destin found updat valu shortest path els none solut work return fals function 
c implement idea c program find shortest safe rout matrix landmin includ bit stdc h use namespac std defin r 12 defin c 10 array use get row column number 4 neighbour given cell int rownum 1 0 0 1 int colnum 0 1 1 0 function check given cell x visit bool issaf int mat r c int visit r c int x int mat x 0 visit x return fals return true function check given cell x valid cell bool isvalid int x int x r c x 0 0 return true return fals function mark adjac cell landmin unsaf 
landmin shown number 0 void markunsafecel int mat r c int 0 r int j 0 j c j landmin found mat j 0 mark adjac cell int k 0 k 4 k isvalid rownum k j colnum k mat rownum k j colnum k 1 mark found adjac cell unsaf int 0 r int j 0 j c j mat j 1 mat j 0 uncom line print path int 0 r int j 0 j c j cout std setw 3 mat j cout endl function find shortest safe rout matrix landmin mat binari input matrix safe cell mark 1 visit store info cell alreadi visit current rout j cordin current cell min_dist store minimum cost shortest path far dist store current path cost void findshortestpathutil int mat r c int visit r c int int j int min_dist int dist destin reach j c 1 updat shortest path found far min_dist min dist min_dist return current path cost exce minimum far dist min_dist return includ j current path visit j 1 recurs safe adjac neighbour int k 0 k 4 k isvalid rownum k j colnum k issaf mat visit rownum k j colnum k findshortestpathutil mat visit rownum k j colnum k min_dist dist 1 backtrack visit j 0 wrapper function findshortestpathutil void findshortestpath int mat r c store minimum cost shortest path far int min_dist int_max creat boolean matrix store info cell alreadi visit current rout int visit r c mark adjac cell landmin unsaf markunsafecel mat start first column take minimum int 0 r path safe current cell mat 0 1 initail visit fals memset visit 0 sizeof visit find shortest rout 0 cell last column x c 1 0 x r findshortestpathutil mat visit 0 min_dist 0 min distanc alreadi found min_dist c 1 break destin reach min_dist int_max cout length shortest safe rout min_dist els destin reachabl cout destin reachabl given sourc driver code int main input matrix landmin shown number 0 int mat r c 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 find shortest path findshortestpath mat return 0 output length shortest safe rout 13 articl contribut aditya goel 
like geeksforgeek would like contribut also write articl use contribut geeksforgeek org mail articl contribut geeksforgeek org 
see articl appear geeksforgeek main page help geek 
pleas write comment find anyth incorrect want share inform topic discuss 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
