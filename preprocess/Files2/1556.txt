given binari tree need check whether sum cover element equal sum uncov element 
binari tree node call uncov appear either left boundari right boundari 
rest node call cover 
exampl consid binari tree binari tree cover node 6 4 7 uncov node 8 3 1 10 14 13 output tree fals sum cover uncov node strongli recommend minim browser tri first 
calcul sum uncov node follow step 1 start root go left keep go left child avail go right child follow procedur reach leaf node 
2 step 1 sum left boundari store right part procedur keep go right right child avail go left child follow procedur reach leaf node 
2 step sum uncov node store subtract total sum get sum cover element check equin binari tree 
c c program find sum cover uncov node binari tree includ bit stdc h use namespac std binari tree node key pointer left child pointer right child struct node int key struct node left right creat newnod tree return pointer struct node newnod int key node temp new node temp key key temp left temp right null return temp util function calcul sum node tree int sum node null return 0 return key sum left sum right recurs function calcul sum left boundari element int uncoveredsumleft node left node return key valu left null right null return key left avail go left otherwis go right left null return key uncoveredsumleft left els return key uncoveredsumleft right recurs function calcul sum right boundari element int uncoveredsumright node left node return key valu left null right null return key right avail go right otherwis go left right null return key uncoveredsumright right els return key uncoveredsumright left return sum uncov element int uncoversum node initi 0 case left right boundari int lb 0 rb 0 left null lb uncoveredsumleft left right null rb uncoveredsumright right return sum root node left boundri right boundri return key lb rb return true sum cover uncov element 
bool issumsam node root sum uncov element int sumuc uncoversum root sum element int sumt sum root check sum cover uncov return sumuc sumt sumuc helper function print inord travers binari tree void inord node root root inord root left printf root key inord root right driver program test function int main make given diagram binari tree node root newnod 8 root left newnod 3 root left left newnod 1 root left right newnod 6 root left right left newnod 4 root left right right newnod 7 root right newnod 10 root right right newnod 14 root right right left newnod 13 issumsam root printf sum cover uncov n els printf sum cover uncov n java java program find sum cover uncov node binari tree binari tree node key pointer left child pointer right child class node int key node left right public node int key key key left right null class binarytre node root util function calcul sum node tree int sum node null return 0 return key sum left sum right recurs function calcul sum left boundari element int uncoveredsumleft node left node return key valu left null right null return key left avail go left otherwis go right left null return key uncoveredsumleft left els return key uncoveredsumleft right recurs function calcul sum right boundari element int uncoveredsumright node left node return key valu left null right null return key right avail go right otherwis go left right null return key uncoveredsumright right els return key uncoveredsumright left return sum uncov element int uncoversum node initi 0 case left right boundari int lb 0 rb 0 left null lb uncoveredsumleft left right null rb uncoveredsumright right return sum root node left boundri right boundri return key lb rb return true sum cover uncov element 
boolean issumsam node root sum uncov element int sumuc uncoversum root sum element int sumt sum root check sum cover uncov return sumuc sumt sumuc helper function print inord travers binari tree void inord node root root null inord root left system print root key inord root right driver program test function public static void main string arg binarytre tree new binarytre make given diagram binari tree tree root new node 8 tree root left new node 3 tree root left left new node 1 tree root left right new node 6 tree root left right left new node 4 tree root left right right new node 7 tree root right new node 10 tree root right right new node 14 tree root right right left new node 13 tree issumsam tree root system println sum cover uncov els system println sum cover uncov code contribut mayank jaiswal mayank_24 output sum cover uncov articl contribut utkarsh trivedi 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
