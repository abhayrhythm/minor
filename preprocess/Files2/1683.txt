given binari search tree bst convert binari tree everi key origin bst chang key plu sum greater key bst 
exampl input root follow bst 5 2 13 output given bst convert follow binari tree 18 20 13 sourc convert bst solut revers inoord travers 
keep track sum node visit far 
let sum sum 
everi node current visit first add key node sum e 
sum sum node key 
chang key current node sum e node key sum 
bst travers revers inord everi key current visit key alreadi visit greater key 
c program chang bst binari tree key node becom origin key plu sum greater key bst includ stdio h includ stdlib h bst node key left child right child struct node int key struct node left struct node right helper function alloc new node given key null left right pointer 
struct node newnod int key struct node node struct node malloc sizeof struct node node key key node left null node right null return node recurs function travers given bst revers inord everi key add greater key void addgreaterutil struct node root int sum_ptr base case root null return recur right subtre first sum greater node store sum_ptr addgreaterutil root right sum_ptr updat valu sum_ptr sum_ptr sum_ptr root key updat key node root key sum_ptr recur left subtre updat sum ad smaller node addgreaterutil root left sum_ptr wrapper addgreaterutil 
initi sum call addgreaterutil recursivel upod use valu sum void addgreat struct node root int sum 0 addgreaterutil root sum util function print inord travers binari tree void printinord struct node node node null return printinord node left printf node key printinord node right driver program test function int main creat follow bst 5 2 13 node root newnod 5 root left newnod 2 root right newnod 13 printf inord travers given tree n printinord root addgreat root printf n inord travers modifi tree n printinord root return 0 java java program convert bst binari tree sum greater key ad everi key class node int data node left right node int data left right null class sum int sum 0 class binarytre static node root sum summ new sum recurs function travers given bst revers inord everi key add greater key void addgreaterutil node node sum sum_ptr base case node null return recur right subtre first sum greater node store sum_ptr addgreaterutil node right sum_ptr updat valu sum_ptr sum_ptr sum sum_ptr sum node data updat key node node data sum_ptr sum recur left subtre updat sum ad smaller node addgreaterutil node left sum_ptr wrapper addgreaterutil 
initi sum call addgreaterutil recursivel upod use valu sum node addgreat node node addgreaterutil node summ return node util function print inord travers binari tree void printinord node node node null return printinord node left system print node data printinord node right driver program test function public static void main string arg binarytre tree new binarytre tree root new node 5 tree root left new node 2 tree root right new node 13 system println inord travers given tree tree printinord root node node tree addgreat root system println system println inord travers modifi tree tree printinord node code contribut mayank jaiswal output inord travers given tree 2 5 13 inord travers modifi tree 20 18 13 time complex n n number node given binari search tree 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
