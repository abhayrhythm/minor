rememb old minesweep 
play squar board click board cell mine 
obvious know mine 
cell mine present click lose els still game 
three level game beginn 9 9 board 10 mine intermedi 16 16 board 40 mine advanc 24 24 board 99 mine probabl find mine beginn level 10 81 0 12 intermedi level 40 256 0 15 advanc level 99 576 0 17 increas number tile rais difficulti bar 
complex level increas proceed next level 
might seem like complet luck base game lucki step mine whole game unlucki step one 
complet luck base game 
instead win almost everi time follow hint given game 
hint win game click cell adjac mine one surround eight cell get know mani adjac cell mine 
logic guess figur cell mine 
click cell adjac mine surround eight cell adjac cell automat clear thu save time 
see alway click cell mine total number cell number mine win 
lucki win short time click cell adjac cell mine 
implement two implement game given first implement user move select randomli use rand function 
second implement user select move use scanf function 
also two board realboard myboard 
play game myboard realboard store locat mine 
throughout game realboard remain unchang wherea myboard see mani chang accord user move 
choos level among beginn intermedi advanc 
done pass one function choosedifficultylevel howev user input game option ask user play game 
level chosen realboard myboard initi accordingli place mine realboard randomli 
also assign move use function assignmov play game howev user input game user assign move whole game till game end 
cheat play know posit mine use function cheatminesweep 
code function comment 
afraid lose uncom function play 
game play till user either win user never step click mine contain cell lose user step click mine contain cell 
repres loop 
loop termin user either win lose 
makemov function insid loop get move randomli randomli assign move 
howev user input game function prompt user enter move 
also guarante first move user alway safe user lose first step step click cell mine would much unfair put check use statement currentmoveindex 0 lifelin program recurs function playminesweeperutil function return true user step click mine henc lose els step click safe cell get count mine surround cell 
use function countadjacentmin calcul adjac mine 
sinc maximum 8 surround cell check 8 surround cell 
adjac mine cell recurs click step safe adjac cell henc reduc time game play 
atleast singl adjac mine cell count display current cell 
given hint player avoid step click cell mine logic 
also click cell adjac mine surround eight cell adjac cell automat clear thu save time 
see alway click cell mine total number cell number mine win 
lucki win short time click cell adjac cell mine 
user keep play step click cell mine case user lose click step safe cell case user win 
c program implement play minesweep includ bit stdc h use namespac std defin beginn 0 defin intermedi 1 defin advanc 2 defin maxsid 25 defin maxmin 99 defin moves 526 25 25 99 int side side length board int mine number mine board util function check whether given cell row col valid cell bool isvalid int row int col return true row number column number rang return row 0 row side col 0 col side util function check whether given cell row col mine 
bool ismin int row int col char board maxsid board row col return true els return fals function get user move void makemov int x int take input move printf enter move row column scanf x return function print current gameplay board void printboard char myboard maxsid int j printf 0 side printf printf n n 0 side printf j 0 j side j printf c myboard j printf n return function count number mine adjac cell int countadjacentmin int row int col int mine 2 char realboard maxsid int int count 0 count mine 8 adjac cell n w n n e w cell e w e cell current cell row col n north row 1 col south row 1 col e east row col 1 w west row col 1 n e north east row 1 col 1 n w north west row 1 col 1 e south east row 1 col 1 w south west row 1 col 1 1st neighbour north process cell valid one isvalid row 1 col true ismin row 1 col realboard true count 2nd neighbour south process cell valid one isvalid row 1 col true ismin row 1 col realboard true count 3rd neighbour east process cell valid one isvalid row col 1 true ismin row col 1 realboard true count 4th neighbour west process cell valid one isvalid row col 1 true ismin row col 1 realboard true count 5th neighbour north east process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard true count 6th neighbour north west process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard true count 7th neighbour south east process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard true count 8th neighbour south west process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard true count return count recurs fucntion play minesweep game bool playminesweeperutil char myboard maxsid char realboard maxsid int mine 2 int row int col int movesleft base case recurs myboard row col return fals int j open mine go lose realboard row col myboard row col 0 mine myboard mine 0 mine 1 printboard myboard printf nyou lost n return true els calcul number adjac mine put board int count countadjacentmin row col mine realboard movesleft myboard row col count 0 count recur 8 adjac cell n w n n e w cell e w e cell current cell row col n north row 1 col south row 1 col e east row col 1 w west row col 1 n e north east row 1 col 1 n w north west row 1 col 1 e south east row 1 col 1 w south west row 1 col 1 1st neighbour north process cell valid one isvalid row 1 col true ismin row 1 col realboard fals playminesweeperutil myboard realboard mine row 1 col movesleft 2nd neighbour south process cell valid one isvalid row 1 col true ismin row 1 col realboard fals playminesweeperutil myboard realboard mine row 1 col movesleft 3rd neighbour east process cell valid one isvalid row col 1 true ismin row col 1 realboard fals playminesweeperutil myboard realboard mine row col 1 movesleft 4th neighbour west process cell valid one isvalid row col 1 true ismin row col 1 realboard fals playminesweeperutil myboard realboard mine row col 1 movesleft 5th neighbour north east process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard fals playminesweeperutil myboard realboard mine row 1 col 1 movesleft 6th neighbour north west process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard fals playminesweeperutil myboard realboard mine row 1 col 1 movesleft 7th neighbour south east process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard fals playminesweeperutil myboard realboard mine row 1 col 1 movesleft 8th neighbour south west process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard fals playminesweeperutil myboard realboard mine row 1 col 1 movesleft return fals function place mine randomli board void placemin int mine 2 char realboard maxsid bool mark maxsid maxsid memset mark fals sizeof mark continu random mine creat 
int 0 mine int random rand side side int x random side int random side add mine mine place posit board mark random fals row index mine mine 0 x column index mine mine 1 place mine realboard mine 0 mine 1 mark random true return function initialis game void initialis char realboard maxsid char myboard maxsid initi random number gener configur aris srand time null assign cell mine free int 0 side int j 0 j side j myboard j realboard j return function cheat reveal mine place 
void cheatminesweep char realboard maxsid printf mine locat n printboard realboard return function replac mine row col put vacant space void replacemin int row int col char board maxsid int 0 side int j 0 j side j find first locat board mine put mine 
board j board j board row col return return function play minesweep game void playminesweep initi game bool gameov fals actual board board char realboard maxsid maxsid myboard maxsid maxsid int movesleft side side mine x int mine maxmin 2 store x coordin mine 
initialis realboard myboard place mine randomli placemin mine realboard want cheat know mine play game uncom part cheatminesweep realboard game open mine keep play int currentmoveindex 0 gameov fals printf current statu board n printboard myboard makemov x guarante first move alway safe first move game currentmoveindex 0 first move mine remov mine locat ismin x realboard true replacemin x realboard currentmoveindex gameov playminesweeperutil myboard realboard mine x movesleft gameov fals movesleft 0 printf nyou n gameov true return function choos difficulti level game void choosedifficultylevel beginn 9 9 cell 10 mine intermedi 16 16 cell 40 mine advanc 24 24 cell 99 mine int level printf enter difficulti level n printf press 0 beginn 9 9 cell 10 mine n printf press 1 intermedi 16 16 cell 40 mine n printf press 2 advanc 24 24 cell 99 mine n scanf level level beginn side 9 mine 10 level intermedi side 16 mine 40 level advanc side 24 mine 99 return driver program test function int main choos level beginn 9 9 cell 10 mine intermedi 16 16 cell 40 mine advanc 24 24 cell 99 mine choosedifficultylevel playminesweep return 0 input 0 1 2 2 3 3 4 4 5 output enter difficulti level press 0 beginn 9 9 cell 10 mine press 1 intermedi 16 16 cell 40 mine press 2 advanc 24 24 cell 99 mine current statu board 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 enter move row column current statu board 0 1 2 3 4 5 6 7 8 0 1 2 2 3 4 5 6 7 8 enter move row column 0 1 2 3 4 5 6 7 8 0 1 2 2 3 4 5 6 7 8 lost 
c program implement user input choos randomli c program implement play minesweep without take input user includ bit stdc h use namespac std defin beginn 0 defin intermedi 1 defin advanc 2 defin maxsid 25 defin maxmin 99 defin moves 526 25 25 99 int side side length board int mine number mine board util function check whether given cell row col valid cell bool isvalid int row int col return true row number column number rang return row 0 row side col 0 col side util function check whether given cell row col mine 
bool ismin int row int col char board maxsid board row col return true els return fals function get user move print move assum distinct valid 
void makemov int x int int move 2 int currentmoveindex x move currentmoveindex 0 move currentmoveindex 1 printf nmi move n x move pre defin want make move uncom section comment section scanf x return function randomli assign move void assignmov int move 2 int movesleft bool mark maxsid maxsid memset mark fals sizeof mark continu move assign 
int 0 movesleft int random rand side side int x random side int random side add mine mine place posit board mark random fals row index mine move 0 x column index mine move 1 mark random true return function print current gameplay board void printboard char myboard maxsid int j printf 0 side printf printf n n 0 side printf j 0 j side j printf c myboard j printf n return function count number mine adjac cell int countadjacentmin int row int col int mine 2 char realboard maxsid int int count 0 count mine 8 adjac cell n w n n e w cell e w e cell current cell row col n north row 1 col south row 1 col e east row col 1 w west row col 1 n e north east row 1 col 1 n w north west row 1 col 1 e south east row 1 col 1 w south west row 1 col 1 1st neighbour north process cell valid one isvalid row 1 col true ismin row 1 col realboard true count 2nd neighbour south process cell valid one isvalid row 1 col true ismin row 1 col realboard true count 3rd neighbour east process cell valid one isvalid row col 1 true ismin row col 1 realboard true count 4th neighbour west process cell valid one isvalid row col 1 true ismin row col 1 realboard true count 5th neighbour north east process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard true count 6th neighbour north west process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard true count 7th neighbour south east process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard true count 8th neighbour south west process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard true count return count recurs fucntion play minesweep game bool playminesweeperutil char myboard maxsid char realboard maxsid int mine 2 int row int col int movesleft base case recurs myboard row col return fals int j open mine go lose realboard row col myboard row col 0 mine myboard mine 0 mine 1 printboard myboard printf nyou lost n return true els calcul number adjac mine put board 
int count countadjacentmin row col mine realboard movesleft myboard row col count 0 count recur 8 adjac cell n w n n e w cell e w e cell current cell row col n north row 1 col south row 1 col e east row col 1 w west row col 1 n e north east row 1 col 1 n w north west row 1 col 1 e south east row 1 col 1 w south west row 1 col 1 1st neighbour north process cell valid one isvalid row 1 col true ismin row 1 col realboard fals playminesweeperutil myboard realboard mine row 1 col movesleft 2nd neighbour south process cell valid one isvalid row 1 col true ismin row 1 col realboard fals playminesweeperutil myboard realboard mine row 1 col movesleft 3rd neighbour east process cell valid one isvalid row col 1 true ismin row col 1 realboard fals playminesweeperutil myboard realboard mine row col 1 movesleft 4th neighbour west process cell valid one isvalid row col 1 true ismin row col 1 realboard fals playminesweeperutil myboard realboard mine row col 1 movesleft 5th neighbour north east process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard fals playminesweeperutil myboard realboard mine row 1 col 1 movesleft 6th neighbour north west process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard fals playminesweeperutil myboard realboard mine row 1 col 1 movesleft 7th neighbour south east process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard fals playminesweeperutil myboard realboard mine row 1 col 1 movesleft 8th neighbour south west process cell valid one isvalid row 1 col 1 true ismin row 1 col 1 realboard fals playminesweeperutil myboard realboard mine row 1 col 1 movesleft return fals function place mine randomli board void placemin int mine 2 char realboard maxsid bool mark maxsid maxsid memset mark fals sizeof mark continu random mine creat 
int 0 mine int random rand side side int x random side int random side add mine mine place posit board mark random fals row index mine mine 0 x column index mine mine 1 place mine realboard mine 0 mine 1 mark random true return function initialis game void initialis char realboard maxsid char myboard maxsid initi random number gener configur aris srand time null assign cell mine free int 0 side int j 0 j side j myboard j realboard j return function cheat reveal mine place 
void cheatminesweep char realboard maxsid printf mine locat n printboard realboard return function replac mine row col put vacant space void replacemin int row int col char board maxsid int 0 side int j 0 j side j find first locat board mine put mine 
board j board j board row col return return function play minesweep game void playminesweep initi game bool gameov fals actual board board char realboard maxsid maxsid myboard maxsid maxsid int movesleft side side mine x int mine maxmin 2 store x coordin mine 
int move moves 2 store x coordin move initialis game initialis realboard myboard place mine randomli placemin mine realboard assign move want make input move function commnent assignmov move movesleft want cheat know mine play game uncom part cheatminesweep realboard game open mine keep play int currentmoveindex 0 gameov fals printf current statu board n printboard myboard makemov x move currentmoveindex guarante first move alway safe first move game currentmoveindex 0 first move mine remov mine locat ismin x realboard true replacemin x realboard currentmoveindex gameov playminesweeperutil myboard realboard mine x movesleft gameov fals movesleft 0 printf nyou n gameov true return function choos difficulti level game void choosedifficultylevel int level beginn 9 9 cell 10 mine intermedi 16 16 cell 40 mine advanc 24 24 cell 99 mine level beginn side 9 mine 10 level intermedi side 16 mine 40 level advanc side 24 mine 99 return driver program test function int main choos level beginn 9 9 cell 10 mine intermedi 16 16 cell 40 mine advanc 24 24 cell 99 mine choosedifficultylevel beginn playminesweep return 0 output current statu board 0 1 2 3 4 5 6 7 8 0 1 2 3 4 5 6 7 8 move 4 7 current statu board 0 1 2 3 4 5 6 7 8 0 1 2 3 4 2 5 6 7 8 move 3 7 current statu board 0 1 2 3 4 5 6 7 8 0 1 2 3 1 4 2 5 6 7 8 move 7 3 0 1 2 3 4 5 6 7 8 0 1 2 3 1 4 2 5 6 7 8 lost 
articl contribut rachit belwariar 
like geeksforgeek would like contribut also write articl mail articl contribut geeksforgeek org 
see articl appear geeksforgeek main page help geek 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
