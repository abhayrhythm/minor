use morri travers travers tree without use stack recurs 
idea morri travers base thread binari tree 
travers first creat link inord successor print data use link final revert chang restor origin tree 
1 initi current root 2 current null current left child print current data b go right e current current right els make current right child rightmost node current left subtre b go left child e current current left although tree modifi travers revert back origin shape complet 
unlik stack base travers extra space requir travers 
c includ stdio h includ stdlib h binari tree tnode data pointer left child pointer right child struct tnode int data struct tnode left struct tnode right function travers binari tree without recurs without stack void morristravers struct tnode root struct tnode current pre root null return current root current null current left null printf current data current current right els find inord predecessor current pre current left pre right null pre right current pre pre right make current right child inord predecessor pre right null pre right current current current left revert chang made part restor origin tree e fix right child predecssor els pre right null printf current data current current right end condit pre right null end condit current left null end util function helper function alloc new tnode given data null left right pointer 
struct tnode newtnod int data struct tnode tnode struct tnode malloc sizeof struct tnode tnode data data tnode left null tnode right null return tnode driver program test function int main construct binari tree 1 2 3 4 5 struct tnode root newtnod 1 root left newtnod 2 root right newtnod 3 root left left newtnod 4 root left right newtnod 5 morristravers root getchar return 0 java java program print inord travers without recurs stack binari tree tnode data pointer left child pointer right child class tnode int data tnode left right tnode int item data item left right null class binarytre tnode root function travers binari tree without recurs without stack void morristravers tnode root tnode current pre root null return current root current null current left null system print current data current current right els find inord predecessor current pre current left pre right null pre right current pre pre right make current right child inord predecessor pre right null pre right current current current left revert chang made part restor origin tree e fix right child predecssor els pre right null system print current data current current right end condit pre right null end condit current left null end public static void main string arg construct binari tree 1 2 3 4 5 binarytre tree new binarytre tree root new tnode 1 tree root left new tnode 2 tree root right new tnode 3 tree root left left new tnode 4 tree root left right new tnode 5 tree morristravers tree root code contribut mayank jaiswal mayank_24 refer www liac nl deutz ds september28 pdf http comsci liu edu murali algo morri htm www scss tcd ie disciplin software_system hughgibbonsslid pdf 
