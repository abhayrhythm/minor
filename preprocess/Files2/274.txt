write function return true given undirect graph tree fals otherwis 
exampl follow graph tree 
follow graph tree 
undirect graph tree follow properti 
1 cycl 
2 graph connect 
undirect graph either use bf df detect two properti 
detect cycl undirect graph 
either use bf df 
everi visit vertex v adjac u u alreadi visit u parent v cycl graph 
find adjac vertex say cycl see detect cycl undirect graph detail 
check connect 
sinc graph undirect start bf df vertex check vertic reachabl 
vertic reachabl graph connect otherwis 
c c program check whether graph tree includ iostream includ list includ limit h use namespac std class undirect graph class graph int v 
vertic list int adj pointer array adjac list bool iscyclicutil int v bool visit int parent public graph int v constructor void addedg int v int w add edg graph bool istre return true graph tree graph graph int v v v adj new list int v void graph addedg int v int w adj v push_back w add w v list 
adj w push_back v add v w list 
recurs function use visit parent detect cycl subgraph reachabl vertex v bool graph iscyclicutil int v bool visit int parent mark current node visit visit v true recur vertic adjac vertex list int iter adj v begin adj v end adjac visit recur adjac visit iscyclicutil visit v return true adjac visit parent current vertex cycl 
els parent return true return fals return true graph tree els fals 
bool graph istre mark vertic visit part recurs stack bool visit new bool v int 0 v visit fals call iscyclicutil serv multipl purpos 
return true graph reachabl vertex 0 cyclcic 
also mark vertic reachabl 0 iscyclicutil 0 visit 1 return fals find vertex reachabl 0 mark iscyclicutil return fals int u 0 u v u visit u return fals return true driver program test function int main graph g1 5 g1 addedg 1 0 g1 addedg 0 2 g1 addedg 0 3 g1 addedg 3 4 g1 istre 
cout graph tree n cout graph tree n graph g2 5 g2 addedg 1 0 g2 addedg 0 2 g2 addedg 2 1 g2 addedg 0 3 g2 addedg 3 4 g2 istre 
cout graph tree n cout graph tree n return 0 java java program check whether graph tree import java io 
import java util 
class repres direct graph use adjac list represent class graph privat int v 
vertic privat linkedlist integ adj adjac list constructor graph int v v v adj new linkedlist v int 0 v adj new linkedlist function add edg graph void addedg int v int w adj v add w adj w add v recurs function use visit parent detect cycl subgraph reachabl vertex v boolean iscyclicutil int v boolean visit int parent mark current node visit visit v true integ recur vertic adjac vertex iter integ adj v iter hasnext next adjac visit recur adjac visit iscyclicutil visit v return true adjac visit parent current vertex cycl 
els parent return true return fals return true graph tree els fals 
boolean istre mark vertic visit part recurs stack boolean visit new boolean v int 0 v visit fals call iscyclicutil serv multipl purpos return true graph reachabl vertex 0 cyclcic 
also mark vertic reachabl 0 iscyclicutil 0 visit 1 return fals find vertex reachabl 0 mark iscyclicutil return fals int u 0 u v u visit u return fals return true driver method public static void main string arg creat graph given diagram graph g1 new graph 5 g1 addedg 1 0 g1 addedg 0 2 g1 addedg 0 3 g1 addedg 3 4 g1 istre system println graph tree els system println graph tree graph g2 new graph 5 g2 addedg 1 0 g2 addedg 0 2 g2 addedg 2 1 g2 addedg 0 3 g2 addedg 3 4 g2 istre system println graph tree els system println graph tree code contribut aakash hasija output graph tree graph tree thank vinit verma suggest problem initi solut 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push 
