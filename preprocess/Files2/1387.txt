given link list integ write function modifi link list even number appear odd number modifi link list 
also keep order even odd number 
exampl input 17 15 8 12 10 5 4 1 7 6 null output 8 12 10 4 6 17 15 5 1 7 null input 8 12 10 5 4 1 6 null output 8 12 10 4 6 5 1 null number even chang list input 8 12 10 null output 8 12 10 null number odd chang list input 1 3 5 7 null output 1 3 5 7 null method 1 idea get pointer last node list 
travers list start head node move odd valu node current posit end list 
thank blunderboy suggest method 
algorithm 1 get pointer last node 
2 move odd node end 
consid odd node first even node move end 
b chang head pointer point first even node 
b consid odd node first even node move end 
c c c c program segreg even odd node link list includ stdio h includ stdlib h node singli link list struct node int data struct node next void segregateevenodd struct node head_ref struct node end head_ref struct node prev null struct node curr head_ref get pointer last node end next null end end next struct node new_end end consid odd node first even node move end curr data 2 0 curr end new_end next curr curr curr next new_end next next null new_end new_end next 10 8 17 17 15 follow step even node curr data 2 0 chang head pointer point first even node head_ref curr current point first even node curr end curr data 2 0 prev curr curr curr next els break link prev current prev next curr next make next curr null curr next null move curr end new_end next curr make curr new end list new_end curr updat current pointer next move node curr prev next must prev set execut line follow statement els prev curr 1 odd node end origin list odd move node end maintain order odd number modifi list new_end end end data 2 0 prev next end next end next null new_end next end return util function function insert node begin void push struct node head_ref int new_data alloc node struct node new_nod struct node malloc sizeof struct node put data new_nod data new_data link old list new node new_nod next head_ref move head point new node head_ref new_nod function print node given link list void printlist struct node node node null printf node data node node next drier program test function int main start empti list struct node head null let us creat sampl link list follow 0 2 4 6 8 10 11 push head 11 push head 10 push head 8 push head 6 push head 4 push head 2 push head 0 printf norigin link list n printlist head segregateevenodd head printf nmodifi link list n printlist head return 0 java java program segreg even odd node link list class linkedlist node head head list link list node class node int data node next node int data next null void segregateevenodd node end head node prev null node curr head get pointer last node end next null end end next node new_end end consid odd node get first eve node curr data 2 0 curr end new_end next curr curr curr next new_end next next null new_end new_end next follow step even node curr data 2 0 head curr curr point first even node curr end curr data 2 0 prev curr curr curr next els break link prev curr prev next curr next make next curr null curr next null move curr end new_end next curr make curr new end list new_end curr updat curr pointer curr prev next set prev execut rest code els prev curr new_end end end data 2 0 prev next end next end next null new_end next end given refer pointer pointer head list int push new node front list 
void push int new_data 1 2 alloc node put data node new_nod new node new_data 3 make next new node head new_nod next head 4 move head point new node head new_nod util function print link list void printlist node temp head temp null system print temp data temp temp next system println drier program test function public static void main string arg linkedlist llist new linkedlist llist push 11 llist push 10 llist push 8 llist push 6 llist push 4 llist push 2 llist push 0 system println origion link list llist printlist llist segregateevenodd system println modifi link list llist printlist code contribut rajat mishra output 
