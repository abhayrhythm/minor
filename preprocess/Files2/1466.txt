given binari tree write function check whether given binari tree complet binari tree 
complet binari tree binari tree everi level except possibl last complet fill node far left possibl 
see follow exampl 
follow tree exampl complet binari tree 1 2 3 1 2 3 4 1 2 3 4 5 6 follow tree exampl non complet binari tree 1 3 1 2 3 4 5 6 1 2 3 4 5 sourc write algorithm check tree complet binari tree method 2 level order travers post easili modifi check whether tree complet 
understand approach let us first defin term full node 
node full node left right children empti null 
approach level order travers start root 
travers node found full node follow node must leaf node 
also one thing need check handl case node empti left child right child must empti 
1 2 3 4 thank guddu sharma suggest simpl effici approach 
c program check given binari tree complet includ stdio h includ stdlib h includ stdbool h defin max_q_siz 500 binari tree node data pointer left child pointer right child struct node int data struct node left struct node right frunction prototyp function need queue data structur 
queue need level order tarvers struct node createqueu int int void enqueu struct node int struct node struct node dequeu struct node int bool isqueueempti int front int rear given binari tree return true tree complet els fals bool iscompletebt struct node root base case empti tree complet binari tree root null return true creat empti queue int rear front struct node queue createqueu front rear creat flag variabl set true non full node seen bool flag fals level order travers use queue 
enqueu queue rear root isqueueempti front rear struct node temp_nod dequeu queue front ceck left child present temp_nod left seen non full node see node non empti left child given tree complet binari tree flag true return fals enqueu queue rear temp_nod left enqueu left child els non full node set flag true flag true ceck right child present temp_nod right seen non full node see node non empti left child given tree complet binari tree flag true return fals enqueu queue rear temp_nod right enqueu right child els non full node set flag true flag true reach tree complet bianri tree return true util function struct node createqueu int front int rear struct node queue struct node malloc sizeof struct node max_q_siz front rear 0 return queue void enqueu struct node queue int rear struct node new_nod queue rear new_nod rear struct node dequeu struct node queue int front front return queue front 1 bool isqueueempti int front int rear return rear front helper function alloc new node given data null left right pointer 
struct node newnod int data struct node node struct node malloc sizeof struct node node data data node left null node right null return node driver program test function int main let us construct follow binari tree complet binari tree 1 2 3 4 5 6 struct node root newnod 1 root left newnod 2 root right newnod 3 root left left newnod 4 root left right newnod 5 root right right newnod 6 iscompletebt root true printf complet binari tree els printf complet binari tree return 0 python check whether binari tree complet binari tree node class node constructor creat new node def __init__ self data self data data self left none self right none given binari tree return true tree complet els return fals def iscompletebt root base case empti tree complet binari tree root none return true creat empti queue queue creat flag variabl set trye non ful node seen flag fals level order travers use queue queue append root len queue 0 tempnod queue pop 0 dequeu check left child present tempnod left seen non full node see node non empti left child given tree complet binari tree flag true return fals enqueu left child queue append tempnod left non full node set flag true els flag true check right cild present tempnod right seen non full node see node non empti left child given tree compelet bt flag true return fals enqueu right child queue append tempnod right non full node set flag true els flag true reach tree compelet bt return true driver program test function let us construct follow binari tree complet binari tree 1 2 3 4 5 6 root node 1 root left node 2 root right node 3 root left left node 4 root left right node 5 root right right node 6 iscompletebt root print complet binari tree els print complet binari tree code contribut nikhil kumar singh nickzuck_007 output complet binari tree time complex n n number node given binari tree auxiliari space n queue 
pleas write comment find code algorithm incorrect find way solv problem 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
