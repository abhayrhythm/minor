given two sort link list construct link list contain maximum sum path start end 
result list may contain node input list 
construct result list may switch input list point intersect mean two node valu list 
allow use 1 extra space 
input list1 1 3 30 90 120 240 511 list2 0 3 12 32 90 125 240 249 output follow maximum sum link list two input list list 1 3 12 32 90 125 240 511 switch 3 240 get maximum sum link list strongli recommend minim browser tri first 
idea solut adjust next pointer common node 
1 start head link list find first common node 
use merg techniqu sort link list 
2 keep track sum element set head result list base greater sum till first common node 
3 till current pointer list becom null need adjust next prev pointer base greater sum 
way done place constant extra space 
time complex solut n 
c c program construct maximum sum link list two given sort list includ iostream use namespac std link list node struct node int data data belong node node next next pointer push data head link list void push node head int data aloc memori new node node newnod new node assign data new node newnod data data adjust next pointer new node newnod next head new node becom head list head newnod method adjust pointer print final list void finalmaxsumlist node node b node result null assign pre cur head link list 
node pre1 curr1 node pre2 b curr2 b till either current pointer null execut loop curr1 null curr2 null keep 2 local variabl start everi loop run keep track sum pre cur pointer element 
int sum1 0 sum2 0 calcul sum travers node link list merg two link list 
loop stop common node curr1 null curr2 null curr1 data curr2 data curr1 data curr2 data sum1 curr1 data curr1 curr1 next els curr2 data curr1 data sum2 curr2 data curr2 curr2 next either current pointer becom null carri sum calcul one 
curr1 null curr2 null sum2 curr2 data curr2 curr2 next curr2 null curr1 null sum1 curr1 data curr1 curr1 next first time adjust result head base maximum sum 
pre1 pre2 b result sum1 sum2 
pre1 pre2 pre1 pre2 contain head pointer list adjust next pointer previou pointer 
els sum1 sum2 pre2 next pre1 next els pre1 next pre2 next adjust previou pointer pre1 curr1 pre2 curr2 curr1 null move next 
curr1 curr1 curr1 next curr2 null move next 
curr2 curr2 curr2 next print result list 
result null cout result data result result next main driver program int main link list 1 1 3 30 90 110 120 null link list 2 0 3 12 32 90 100 120 130 null node head1 null head2 null push head1 120 push head1 110 push head1 90 push head1 30 push head1 3 push head1 1 push head2 130 push head2 120 push head2 100 push head2 90 push head2 32 push head2 12 push head2 3 push head2 0 finalmaxsumlist head1 head2 return 0 java java program construct maximum sum link list two sort link list common node class linkedlist node head head list link list node class node int data node next node int data next null method adjust pointer print final list void finalmaxsumlist node node b node result null assign pre cur head link list node pre1 curr1 node pre2 b curr2 b till either current pointer null execut loop curr1 null curr2 null keep 2 local variabl start everi loop run keep track sum pre cur refer element 
int sum1 0 sum2 0 calcul sum travers node link list merg two link list 
loop stop common node curr1 null curr2 null curr1 data curr2 data curr1 data curr2 data sum1 curr1 data curr1 curr1 next els sum2 curr2 data curr2 curr2 next either current pointer becom null carri sum calcul one 
curr1 null curr2 null sum2 curr2 data curr2 curr2 next curr2 null curr1 null sum1 curr1 data curr1 curr1 next first time adjust result head base maximum sum 
pre1 pre2 b result sum1 sum2 
pre1 pre2 pre1 pre2 contain head refernc list adjust next pointer previou pointer 
els sum1 sum2 pre2 next pre1 next els pre1 next pre2 next adjust previou pointer pre1 curr1 pre2 curr2 curr1 null move next 
curr1 null curr1 curr1 next curr2 null move next 
curr2 null curr2 curr2 next result null system print result data result result next system println insert node start link list void push int new_data 1 2 alloc node put data node new_nod new node new_data 3 make next new node head new_nod next head 4 move head point new node head new_nod drier program test function public static void main string arg linkedlist llist1 new linkedlist linkedlist llist2 new linkedlist link list 1 1 3 30 90 110 120 null link list 2 0 3 12 32 90 100 120 130 null llist1 push 120 llist1 push 110 llist1 push 90 llist1 push 30 llist1 push 3 llist1 push 1 llist2 push 130 llist2 push 120 llist2 push 100 llist2 push 90 llist2 push 32 llist2 push 12 llist2 push 3 llist2 push 0 llist1 finalmaxsumlist llist1 head llist2 head code contribut rajat mishra python python program construct maximum sum link list two sort link list common node class linkedlist object def __init__ self head list self head none link list node class node object def __init__ self self data self next none method adjust pointer print final list def finalmaxsumlist self b result none assign pre cur head link list pre1 curr1 pre2 b curr2 b till either current pointer null execut loop curr1 none curr2 none keep 2 local variabl start everi loop run keep track sum pre cur refer element 
sum1 0 sum2 0 calcul sum travers node link list merg two link list 
loop stop common node curr1 none curr2 none curr1 data curr2 data curr1 data curr2 data sum1 curr1 data curr1 curr1 next els sum2 curr2 data curr2 curr2 next either current pointer becom null carri sum calcul one 
curr1 none curr2 none sum2 curr2 data curr2 curr2 next curr2 none curr1 none sum1 curr1 data curr1 curr1 next first time adjust result head base maximum sum 
pre1 pre2 b result pre1 sum1 sum2 els pre2 els pre1 pre2 contain head refernc list adjust next pointer previou pointer 
sum1 sum2 pre2 next pre1 next els pre1 next pre2 next adjust previou pointer pre1 curr1 pre2 curr2 curr1 null move next 
curr1 none curr1 curr1 next curr2 null move next 
curr2 none curr2 curr2 next result none print str result data result result next print util function insert new node front list 
def push self new_data 1 2 alloc node put data new_nod self node new_data 3 make next new node head new_nod next self head 4 move head point new node self head new_nod driver program llist1 linkedlist llist2 linkedlist link list 1 1 3 30 90 110 120 null link list 2 0 3 12 32 90 100 120 130 null llist1 push 120 llist1 push 110 llist1 push 90 llist1 push 30 llist1 push 3 llist1 push 1 llist2 push 130 llist2 push 120 llist2 push 100 llist2 push 90 llist2 push 32 llist2 push 12 llist2 push 3 llist2 push 0 llist1 finalmaxsumlist llist1 head llist2 head code contribut bhavya jain output 1 3 12 32 90 110 120 130 time complex n n length bigger link list auxiliari space 1 howev problem solut origin list chang 
exercis 1 tri problem auxiliari space constraint 
2 tri problem modifi actual list creat result list 
articl contribut kumar gautam 
pleas write comment find anyth incorrect want share inform topic discuss 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
