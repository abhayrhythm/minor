write function detectandremoveloop check whether given link list contain loop loop present remov loop return true 
list contain loop return fals 
diagram show link list loop 
detectandremoveloop must chang list 1 2 3 4 5 null 
also recommend read follow post prerequisit solut discuss 
write c function detect loop link list tri remov loop must detect 
techniqu discuss post use detect loop 
remov loop need get pointer last node loop 
exampl node valu 5 diagram 
pointer last node make next node null loop gone 
easili use hash visit node techniqu discuss mention post get pointer last node 
idea simpl first node whose next alreadi visit hash last node 
also use floyd cycl detect algorithm detect remov loop 
floyd algo slow fast pointer meet loop node 
use loop node remov cycl 
follow two differ way remov loop floyd algorithm use loop detect 
method 1 check one one know floyd cycl detect algorithm termin fast slow pointer meet common point 
also know common point one loop node 2 3 4 5 diagram 
store address pointer variabl say ptr2 
start head link list check node one one reachabl ptr2 
find node reachabl know node start node loop link list get pointer previou node 
c includ stdio h includ stdlib h link list node struct node int data struct node next function remov loop 
use detectandremoveloop void removeloop struct node struct node function detect remov loop list loop list return 1 otherwis return 0 int detectandremoveloop struct node list struct node slow_p list fast_p list slow_p fast_p fast_p next slow_p slow_p next fast_p fast_p next next slow_p fast_p meet point loop slow_p fast_p removeloop slow_p list return 1 indic loop found return 1 return 0 indeci ther loop return 0 function remov loop 
loop_nod pointer one loop node head pointer start node link list void removeloop struct node loop_nod struct node head struct node ptr1 struct node ptr2 set pointer bege link list move one one find first node part link list ptr1 head 1 start pointer loop_nod check ever reach ptr2 ptr2 loop_nod ptr2 next loop_nod ptr2 next ptr1 ptr2 ptr2 next ptr2 reahc ptr1 loop 
break loop ptr2 next ptr1 break ptr2 reach ptr1 tri next node ptr1 ptr1 ptr1 next end loop ptr2 last node loop 
make next ptr2 null ptr2 next null function print link list void printlist struct node node node null printf node data node node next struct node newnod int key struct node temp new struct node temp data key temp next null return temp drier program test function int main struct node head newnod 50 head next newnod 20 head next next newnod 15 head next next next newnod 4 head next next next next newnod 10 creat loop test head next next next next next head next next detectandremoveloop head printf link list remov loop n printlist head return 0 java java program detect remov loop link list class linkedlist static node head static class node int data node next node int data next null function detect loop list int detectandremoveloop node node node slow node fast node slow null fast null fast next null slow slow next fast fast next next slow fast meet point loop present slow fast removeloop slow node return 1 return 0 function remov loop void removeloop node loop node curr node ptr1 null ptr2 null set pointer bege link list move one one find first node part link list ptr1 curr 1 1 start pointer loop_nod check ever reach ptr2 ptr2 loop ptr2 next loop ptr2 next ptr1 ptr2 ptr2 next ptr2 reahc ptr1 loop 
break loop ptr2 next ptr1 break ptr2 reach ptr1 tri next node ptr1 ptr1 ptr1 next end loop ptr2 last node loop 
make next ptr2 null ptr2 next null function print link list void printlist node node node null system print node data node node next driver program test function public static void main string arg linkedlist list new linkedlist list head new node 50 list head next new node 20 list head next next new node 15 list head next next next new node 4 list head next next next next new node 10 creat loop test head next next next next next head next next list detectandremoveloop head system println link list remov loop list printlist head code contribut mayank jaiswal python python program detect remov loop link list node class class node constructor initi node object def __init__ self data self data data self next none class linkedlist function initi head def __init__ self self head none def detectandremoveloop self slow_p fast_p self head slow_p fast_p fast_p next slow_p slow_p next fast_p fast_p next next slow_p fast_p meet poin loop slow_p fast_p self removeloop slow_p return 1 indic loop found return 1 return 0 indic loop return 0 function remov loop loop node pointer one loop node head pointer start node link list def removeloop self loop_nod set pointer begin link list move one one find first node part link list ptr1 self head 1 start pointer loop_nod check ever reach ptr2 ptr2 loop_nod ptr2 next loop_nod ptr2 next ptr1 ptr2 ptr2 next ptr2 reach ptr1 loop 
break loop ptr2 next ptr1 break ptr1 ptr1 next end loop ptr2 lsat node loop 
make next ptr2 null ptr2 next none function insert new node begin def push self new_data new_nod node new_data new_nod next self head self head new_nod util function prit link linkedlist def printlist self temp self head temp print temp data temp temp next driver program llist linkedlist llist push 10 llist push 4 llist push 15 llist push 20 llist push 50 creat loop test llist head next next next next next llist head next next llist detectandremoveloop print link list remov loop llist printlist code contribut nikhil kumar singh nickzuck_007 output link list remov loop 50 20 15 4 10 method 2 better solut method also depend floyd cycl detect algorithm 
1 detect loop use floyd cycl detect algo get pointer loop node 
2 count number node loop 
let count k 3 fix one pointer head anoth kth node head 
4 move pointer pace meet loop start node 
5 get pointer last node loop make next null 
thank wgpshashank suggest method 
c includ stdio h includ stdlib h link list node struct node int data struct node next function remov loop 
void removeloop struct node struct node function detect remov loop list loop list return 1 otherwis return 0 int detectandremoveloop struct node list struct node slow_p list fast_p list slow_p fast_p fast_p next slow_p slow_p next fast_p fast_p next next slow_p fast_p meet point loop slow_p fast_p removeloop slow_p list return 1 indic loop found return 1 return 0 indeci ther loop return 0 function remov loop 
loop_nod pointer one loop node head pointer start node link list void removeloop struct node loop_nod struct node head struct node ptr1 loop_nod struct node ptr2 loop_nod count number node loop unsign int k 1 ptr1 next ptr2 ptr1 ptr1 next k fix one pointer head ptr1 head pointer k node head ptr2 head 0 k ptr2 ptr2 next move pointer pace meet loop start node ptr2 ptr1 ptr1 ptr1 next ptr2 ptr2 next get pointer last node ptr2 ptr2 next ptr2 next ptr1 ptr2 ptr2 next set next node loop end node fix loop ptr2 next null function print link list void printlist struct node node node null printf node data node node next struct node newnod int key struct node temp new struct node temp data key temp next null return temp driver program test function int main struct node head newnod 50 head next newnod 20 head next next newnod 15 head next next next newnod 4 head next next next next newnod 10 creat loop test head next next next next next head next next detectandremoveloop head printf link list remov loop n printlist head return 0 java java program detect remov loop link list class linkedlist static node head static class node int data node next node int data next null function detect loop list int detectandremoveloop node node node slow node fast node slow null fast null fast next null slow slow next fast fast next next slow fast meet point loop present slow fast removeloop slow node return 1 return 0 function remov loop void removeloop node loop node head node ptr1 loop node ptr2 loop count number node loop int k 1 ptr1 next ptr2 ptr1 ptr1 next k fix one pointer head ptr1 head pointer k node head ptr2 head 0 k ptr2 ptr2 next move pointer pace meet loop start node ptr2 ptr1 ptr1 ptr1 next ptr2 ptr2 next get pointer last node ptr2 ptr2 next ptr2 next ptr1 ptr2 ptr2 next set next node loop end node fix loop ptr2 next null function print link list void printlist node node node null system print node data node node next driver program test function public static void main string arg linkedlist list new linkedlist list head new node 50 list head next new node 20 list head next next new node 15 list head next next next new node 4 list head next next next next new node 10 creat loop test head next next next next next head next next list detectandremoveloop head system println link list remov loop list printlist head code contribut mayank jaiswal python python program detect remov loop link list node class class node constructor initi node object def __init__ self data self data data self next none class linkedlist function initi head def __init__ self self head none def detectandremoveloop self slow_p fast_p self head slow_p fast_p fast_p next slow_p slow_p next fast_p fast_p next next slow_p fast_p meet point loop slow_p fast_p self removeloop slow_p return 1 indic loop found return 1 return 0 indic loop return 0 function remov loop loop_nod pointer one loop node head pointer start node link list def removeloop self loop_nod ptr1 loop_nod ptr2 loop_nod count number node loop k 1 ptr1 next ptr2 ptr1 ptr1 next k 1 fix one pointer head ptr1 self head pointer k node head ptr2 self head rang k ptr2 ptr2 next move pointer place meet loop start node ptr2 ptr1 ptr1 ptr1 next ptr2 ptr2 next get pointer last node ptr2 ptr2 next ptr2 next ptr1 ptr2 ptr2 next set next node loop end node fix loop ptr2 next none function insert new node begin def push self new_data new_nod node new_data new_nod next self head self head new_nod util function prit link linkedlist def printlist self temp self head temp print temp data temp temp next driver program llist linkedlist llist push 10 llist push 4 llist push 15 llist push 20 llist push 50 creat loop test llist head next next next next next llist head next next llist detectandremoveloop print link list remov loop llist printlist code contribut nikhil kumar singh nickzuck_007 output link list remov loop 50 20 15 4 10 method 3 optim method 2 without count node loop need count number node loop 
detect loop start slow pointer head move slow fast pointer speed fast meet would meet begin link list 
work 
let slow fast meet point floyd cycl find algorithm 
diagram show situat cycl found 
conclud diagram distanc travel fast pointer 2 distanc travel slow pointer n x k 2 n k note meet point shown fast move twice speed 
x number complet cyclic round made fast pointer meet first time number complet cyclic round made slow pointer meet first time equat conclud k x 2y n mean k multipl n start move pointer speed one pointer say slow begin head node link list pointer say fast begin meet point 
slow pointer reach begin link list made step 
fast pointer would made also move step move pace 
sinc k multipl n fast start k would meet begin 
meet also 
slow pointer enter cycl first time step 
c c program detect remov loop includ bit stdc h use namespac std struct node int key struct node next node newnod int key node temp new node temp key key temp next null return temp util function print link list void printlist node head head null cout head key head head next cout endl void detectandremoveloop node head node slow head node fast head next search loop use slow fast pointer fast fast next slow fast break slow slow next fast fast next next loop exist slow fast slow head slow fast next slow slow next fast fast next sinc fast next loop point fast next null remov loop driver program test function int main node head newnod 50 head next newnod 20 head next next newnod 15 head next next next newnod 4 head next next next next newnod 10 creat loop test head next next next next next head next next detectandremoveloop head printf link list remov loop n printlist head return 0 java java program detect remov loop link list class linkedlist static node head static class node int data node next node int data next null function detect loop list void detectandremoveloop node node node slow node node fast node next search loop use slow fast pointer fast null fast next null slow fast break slow slow next fast fast next next loop exist slow fast slow node slow fast next slow slow next fast fast next sinc fast next loop point fast next null remov loop function print link list void printlist node node node null system print node data node node next driver program test function public static void main string arg linkedlist list new linkedlist list head new node 50 list head next new node 20 list head next next new node 15 list head next next next new node 4 list head next next next next new node 10 creat loop test head next next next next next head next next list detectandremoveloop head system println link list remov loop list printlist head code contribut mayank jaiswal python python program detect remov loop node class class node constructor initi node object def __init__ self data self data data self next none class linkedlist function initi head def __init__ self self head none function insert new node begin def push self new_data new_nod node new_data new_nod next self head self head new_nod def detectandremoveloop self slow self head fast self head next search loop use slow fast pointer fast none fast next none break slow fast break slow slow next fast fast next next loop exist slow fast slow self head slow fast next slow slow next fast fast next sinc fast next loop point fast next none remov loop util function print link linkedlist def printlist self temp self head temp print temp data temp temp next driver program llist linkedlist llist head node 50 llist head next node 20 llist head next next node 15 llist head next next next node 4 llist head next next next next node 10 creat loop test llist head next next next next next llist head next next llist detectandremoveloop print link list remov looop llist printlist code contribut nikhil kumar singh nickzuck_007 output link list remov loop 50 20 15 4 10 thank gaurav ahirwar suggest solut 
pleas write comment find code algorithm incorrect find way solv problem 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
