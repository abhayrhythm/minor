introduc combinatori game theori set 1 discuss game nim set 2 grundi number number defin state game 
defin imparti game term grundi number 
grundi number nimber determin imparti game game nim solv calcul grundi number associ game use spragu grundi theorem 
calcul grundi number need learn anoth term mex 
mex 
minimum exclud k mex set number smallest non neg number present set 
calcul grundi number 
use definit grundi number nimber equal 0 game lost immedi first player equal mex nimber possibl next posit game 
three exampl game program calcul grundi number mex 
calcul grundi number done basic recurs function call calculategrundi function use calculatemex function sub routin 
exampl 1 game start pile n stone player move may take posit number stone 
calcul grundi number game 
last player move win 
player win game 
sinc first player 0 stone lose immedi grundi 0 0 player 1 stone take stone win 
next possibl posit game player 0 stone henc grundi 1 mex 0 1 accord definit mex similarli player 2 stone take 1 stone take stone win 
next possibl posit game player 1 0 stone respect 
henc grundi 2 mex 0 1 2 accord definit mex similarli player n stone take 1 stone take 2 stone take stone win 
next possibl posit game player n 1 n 2 1 stone respect 
henc grundi n mex 0 1 2 n 1 n accord definit mex summar first grundi valu 0 10 tabl recurs c program find grundi number game like one pile version nim 
game descript game start pile n stone player move may take posit number stone 
last player move win 
player win game 
includ bit stdc h use namespac std function calcul mex valu set 
int calculatemex unordered_set int set int mex 0 set find mex set end mex return mex function comput grundi number n function vari accord game int calculategrundi int n n 0 return 0 unordered_set int set hash tabl int 0 n 1 set insert calculategrundi return calculatemex set driver program test function int main int n 10 printf calculategrundi n return 0 output 10 solut optim use dynam program overlap subproblem 
dynam program base implement found 
exampl 2 game start pile n stone player move may take posit number stone upto 3 
last player move win 
player win game 
game 1 pile version nim 
sinc first player 0 stone lose immedi grundi 0 0 player 1 stone take stone win 
next possibl posit game player 0 stone henc grundi 1 mex 0 1 accord definit mex similarli player 2 stone take 1 stone take 2 stone win 
next possibl posit game player 1 0 stone respect 
henc grundi 2 mex 0 1 2 accord definit mex similarli grundi 3 mex 0 1 2 3 accord definit mex 4 stone 
player 4 stone take 1 stone take 2 stone 3 stone take 4 stone see constraint game 
next possibl posit game player 3 2 1 stone respect 
henc grundi 4 mex 1 2 3 0 accord definit mex defin grundi number n 4 recurs grundi n mex grundi n 1 grundi n 2 grundi n 3 summar first grundi valu 0 10 tabl recurs c program find grundi number game one pile version nim 
game descript game start pile n stone player move may take posit number stone upto 3 
last player move win 
includ bit stdc h use namespac std function calcul mex valu set 
int calculatemex unordered_set int set int mex 0 set find mex set end mex return mex function comput grundi number n function vari accord game int calculategrundi int n n 0 return 0 n 1 return 1 n 2 return 2 n 3 return 3 unordered_set int set hash tabl int 1 3 set insert calculategrundi n return calculatemex set driver program test function int main int n 10 printf calculategrundi n return 0 output 2 solut optim use dynam program overlap subproblem 
dynam program base implement found 
exampl 3 game start number n player move divid number n 2 3 6 take floor 
integ becom 0 remov 
last player move win 
player win game 
summar first grundi valu 0 10 tabl think gener tabl 
recurs c program find grundi number game 
game descript game start number n player move divid number n 2 3 6 take floor 
integ becom 0 remov 
last player move win 
includ bit stdc h use namespac std function calcul mex valu set 
int calculatemex unordered_set int set int mex 0 set find mex set end mex return mex function comput grundi number n function vari accord game int calculategrundi int n n 0 return 0 unordered_set int set hash tabl set insert calculategrundi n 2 set insert calculategrundi n 3 set insert calculategrundi n 6 return calculatemex set driver program test function int main int n 10 printf calculategrundi n return 0 output 0 solut optim use dynam program overlap subproblem 
dynam program base implement found 
refer http en wikipedia org wiki mex_ mathemat http en wikipedia org wiki nimber next post discuss solut imparti game use grundi number nimber 
articl contribut rachit belwariar 
like geeksforgeek would like contribut also write articl mail articl contribut geeksforgeek org 
see articl appear geeksforgeek main page help geek 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
