given binari tree find exist edg whose remov creat two tree equal size 
exampl input root follow tree 5 1 6 3 7 4 output true remov edg 5 6 creat two tree equal size input root follow tree 5 1 6 7 4 3 2 8 output fals edg whose remov creat two tree equal size 
sourc kshitij iit kgp strongli recommend minim browser tri first 
method 1 simpl first count number node whole tree 
let count node n travers tree everi node find size subtre root node 
let subtre size n equal return true els fals 
c c program check exist edg whose remov creat two tree size includ bit stdc h use namespac std struct node int data struct node left right util function creat new node struct node newnod int x struct node temp new node temp data x temp left temp right null return temp calcul size tree given root int count node root root null return 0 return count root left count root right 1 function return true edg whose remov divid tree two halv n size tree bool checkrec node root int n base case root null return fals check root count root n count root return true check rest node return checkrec root left n checkrec root right n function mainli use checkrec bool check node root count total node given tree int n count root recurs check node return checkrec root n driver code int main struct node root newnod 5 root left newnod 1 root right newnod 6 root left left newnod 3 root right left newnod 7 root right right newnod 4 check root 
printf ye printf return 0 java java program check exist edg whose remov creat two tree size class node int key node left right public node int key key key left right null class binarytre node root calcul size tree given root int count node node node null return 0 return count node left count node right 1 function return true edg whose remov divid tree two halv n size tree boolean checkrec node node int n base case node null return fals check root count node n count node return true check rest node return checkrec node left n checkrec node right n function mainli use checkrec boolean check node node count total node given tree int n count node recurs check node return checkrec node n driver code public static void main string arg binarytre tree new binarytre tree root new node 5 tree root left new node 1 tree root right new node 6 tree root left left new node 3 tree root right left new node 7 tree root right right new node 4 tree check tree root true system println ye els system println code contribut mayank jaiswal mayank_24 output ye time complex solut n2 n number node given binari tree 
method 2 effici find solut n time 
idea travers tree bottom manner travers keep updat size keep check node follow requir properti 
c implement idea 
c c program check exist edg whose remov creat two tree size includ bit stdc h use namespac std struct node int data struct node left right util function creat new node struct node newnod int x struct node temp new node temp data x temp left temp right null return temp calcul size tree given root int count node root root null return 0 return count root left count root right 1 function return size tree root given root 
also set re true edg whose remov divid tree two halv 
n size tree int checkrec node root int n bool re base case root null return 0 comput size left right children int c checkrec root left n re 1 checkrec root right n re requir properti true current node set re true c n c re true return size return c function mainli use checkrec bool check node root count total node given tree int n count root initi result recurs check node bool re fals checkrec root n re return re driver code int main struct node root newnod 5 root left newnod 1 root right newnod 6 root left left newnod 3 root right left newnod 7 root right right newnod 4 check root 
printf ye printf return 0 java java program check exist edg whose remov creat two tree size class node int key node left right public node int key key key left right null class re boolean re fals class binarytre node root calcul size tree given root int count node node node null return 0 return count node left count node right 1 function return size tree root given root 
also set re true edg whose remov divid tree two halv 
n size tree int checkrec node root int n re re base case root null return 0 comput size left right children int c checkrec root left n re 1 checkrec root right n re requir properti true current node set re true c n c re re true return size return c function mainli use checkrec boolean check node root count total node given tree int n count root initi result recurs check node re re new re checkrec root n re return re re driver code public static void main string arg binarytre tree new binarytre tree root new node 5 tree root left new node 1 tree root right new node 6 tree root left left new node 3 tree root right left new node 7 tree root right right new node 4 tree check tree root true system println ye els system println code contribut mayank jaiswal mayank_24 output ye articl contribut asaad akram 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
