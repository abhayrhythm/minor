invers count array indic far close array sort 
array alreadi sort invers count 0 array sort revers order invers count maximum 
formal speak two element j form invers j j exampl sequenc 2 4 1 3 5 three invers 2 1 4 1 4 3 
method 1 simpl element count number element right side smaller 
includ bit stdc h int getinvcount int arr int n int inv_count 0 int 0 n 1 int j 1 j n j arr arr j inv_count return inv_count driver progra test function int main int argv char arg int arr 1 20 6 4 5 int n sizeof arr sizeof arr 0 printf number invers n getinvcount arr n return 0 output number invers 5 time complex n 2 method 2 enhanc merg sort suppos know number invers left half right half array let inv1 inv2 kind invers account inv1 inv2 
answer invers count merg step 
therefor get number invers need add number invers left subarray right subarray merg 
get number invers merg 
merg process let use index left sub array j right sub array 
step merg greater j mid invers 
left right subarray sort remain element left subarray 1 2 mid greater j complet pictur implement includ bit stdc h int _mergesort int arr int temp int left int right int merg int arr int temp int left int mid int right function sort input array return number invers array int mergesort int arr int array_s int temp int malloc sizeof int array_s return _mergesort arr temp 0 array_s 1 auxiliari recurs function sort input array return number invers array 
int _mergesort int arr int temp int left int right int mid inv_count 0 right left divid array two part call _mergesortandcountinv part mid right left 2 invers count sum invers left part right part number invers merg inv_count _mergesort arr temp left mid inv_count _mergesort arr temp mid 1 right merg two part inv_count merg arr temp left mid 1 right return inv_count funt merg two sort array return invers count array 
int merg int arr int temp int left int mid int right int j k int inv_count 0 left index left subarray j mid index right subarray k left index result merg subarray mid 1 j right arr arr j temp k arr els temp k arr j tricki see explan diagram merg inv_count inv_count mid copi remain element left subarray temp mid 1 temp k arr copi remain element right subarray temp j right temp k arr j copi back merg element origin array left right arr temp return inv_count driver progra test function int main int argv char arg int arr 1 20 6 4 5 printf number invers n mergesort arr 5 getchar return 0 output number invers 5 note code modifi sort input array 
want count invers need creat copi origin array call mergesort copi 
time complex nlogn algorithm paradigm divid conquer may like see 
count invers array set 2 use self balanc bst count invers use set c stl count invers array set 3 use bit refer http www cs umd edu class fall2009 cmsc451 lectur lec08 invers pdf http www cp eng chula ac th piak teach algo algo2008 count inv htm pleas write comment find bug program algorithm way solv problem 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
