given binari tree posit integ k print node distanc k leaf node 
mean distanc differ previou post 
k distanc leaf mean k level higher leaf node 
exampl k height binari tree noth print 
expect time complex n n number node given binari tree 
strongli recommend minim browser tri first 
idea travers tree 
keep store ancestor till hit leaf node 
reach leaf node print ancestor distanc k also need keep track node alreadi print output 
use boolean array visit 
c program print node distanc k leaf includ iostream use namespac std defin max_height 10000 struct node int key node left right util alloc new node given key node newnod int key node node new node node key key node left node right null return node function print node distanc k leaf node path store ancestor node visit store true node print output 
node may k distanc away mani leav want print void kdistantfromleafutil node node int path bool visit int pathlen int k base case node null return append node path array path pathlen node key visit pathlen fals pathlen leaf print ancestor distanc k ancestor alreadi print node left null node right null pathlen k 1 0 visit pathlen k 1 fals cout path pathlen k 1 visit pathlen k 1 true return leaf node recur left right subtre kdistantfromleafutil node left path visit pathlen k kdistantfromleafutil node right path visit pathlen k given binari tree nuber k print node k distant leaf void printkdistantfromleaf node node int k int path max_height bool visit max_height fals kdistantfromleafutil node path visit 0 k driver program test function int main let us creat binari tree given exampl node root newnod 1 root left newnod 2 root right newnod 3 root left left newnod 4 root left right newnod 5 root right left newnod 6 root right right newnod 7 root right left right newnod 8 cout node distanc 2 printkdistantfromleaf root 2 return 0 java java program print node distanc k leaf binari tree node class node int data node left right node int item data item left right null class binarytre node root function print node distanc k leaf node path store ancestor node visit store true node print output 
node may k distanc away mani leav want print void kdistantfromleafutil node node int path boolean visit int pathlen int k base case node null return append node path array path pathlen node data visit pathlen fals pathlen leaf print ancestor distanc k ancestor alreadi print node left null node right null pathlen k 1 0 visit pathlen k 1 fals system print path pathlen k 1 visit pathlen k 1 true return leaf node recur left right subtre kdistantfromleafutil node left path visit pathlen k kdistantfromleafutil node right path visit pathlen k given binari tree nuber k print node k distant leaf void printkdistantfromleaf node node int k int path new int 1000 boolean visit new boolean 1000 kdistantfromleafutil node path visit 0 k driver program test function public static void main string arg binarytre tree new binarytre let us construct tree shown diagram tree root new node 1 tree root left new node 2 tree root right new node 3 tree root left left new node 4 tree root left right new node 5 tree root right left new node 6 tree root right right new node 7 tree root right left right new node 8 system println node distanc 2 tree printkdistantfromleaf tree root 2 code contribut mayank jaiswal output node distanc 2 3 1 time complex time complex code n code simpl tree travers 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
