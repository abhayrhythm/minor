question given binari tree find tree fold 
tree fold left right subtre tree structur wise mirror imag 
empti tree consid foldabl 
consid tree b fold 
c cannot fold 
10 7 15 9 11 b 10 7 15 9 11 c 10 7 15 5 11 10 7 15 9 10 12 method 1 chang left subtre mirror compar right subtre algorithm isfold root 1 tree empti return true 
2 convert left subtre mirror imag mirror root left see post 3 check structur left subtre right subtre store result 
re isstructsam root left root right isstructsam recurs compar structur two subtre return true structur 4 revert chang made step 2 get origin tree 
mirror root left 5 return result re store step 2 thank ajaym suggest approach 
c includ stdio h includ stdlib h would want remov 3 line compil support bool true fals defin bool int defin true 1 defin fals 0 binari tree node data pointer left child pointer right child struct node int data struct node left struct node right convert tree mrror imag void mirror struct node node return true structur two tree b structur consid comparison data 
bool isstructsam struct node struct node b return true given tree foldabl bool isfold struct node root bool re base case root null return true convert left subtre mirror mirror root left compar structur right subtre mirror left subtre re isstructsam root left root right get origini tree back mirror root left return re bool isstructsam struct node struct node b null b null return true null b null isstructsam left b left isstructsam right b right return true return fals util function chang tree role left right pointer swap everi node 
see http geeksforgeek org p 662 detail void mirror struct node node node null return els struct node temp subtre mirror node left mirror node right swap pointer node temp node left node left node right node right temp helper function alloc new node given data null left right pointer 
struct node newnod int data struct node node struct node malloc sizeof struct node node data data node left null node right null return node driver program test mirror int main void construct binari tree 1 2 3 4 5 struct node root newnod 1 root left newnod 2 root right newnod 3 root right left newnod 4 root left right newnod 5 isfold root 1 printf n tree foldabl els printf n tree foldabl getchar return 0 java java program check foldabl binari tree binari tree node data pointer left child pointer right child class node int data node left right node int item data item left right null class binarytre node root return true given tree foldabl boolean isfold node node boolean re base case node null return true convert left subtre mirror mirror node left compar structur right subtre mirror left subtre re isstructsam node left node right get origini tree back mirror node left return re boolean isstructsam node node b null b null return true null b null isstructsam left b left isstructsam right b right return true return fals util function chang tree role left right pointer swap everi node 
see http geeksforgeek org p 662 detail void mirror node node node null return els node temp subtre mirror node left mirror node right swap pointer node temp node left node left node right node right temp driver program test function public static void main string arg binarytre tree new binarytre construct binari tree 1 2 3 4 5 tree root new node 1 tree root left new node 2 tree root right new node 3 tree root right left new node 4 tree root left right new node 5 tree isfold tree root system println tree foldabl els system println tree foldabl code contribut mayank jaiswal time complex n method 2 check left right subtre mirror mainli two function check tree fold isfold root 1 tree empti return true 2 els check left right subtre structur wise mirror 
use util function isfoldableutil root left root right 
check n1 n2 mirror 
isfoldableutil n1 n2 1 tree empti return true 
2 one empti return fals 
3 return true follow condit met n1 left mirror n2 right b n1 right mirror n2 left c includ stdio h includ stdlib h would want remov 3 line compil support bool true fals defin bool int defin true 1 defin fals 0 binari tree node data pointer left child pointer right child struct node int data struct node left struct node right util function check tree root n1 n2 mirror bool isfoldableutil struct node n1 struct node n2 return true given tree fold bool isfold struct node root root null return true return isfoldableutil root left root right util function check tree root n1 n2 mirror bool isfoldableutil struct node n1 struct node n2 left right subtre null return true n1 null n2 null return true one tree null return fals n1 null n2 null return fals otherwis check left right subtre mirror counterpart return isfoldableutil n1 left n2 right isfoldableutil n1 right n2 left util function helper function alloc new node given data null left right pointer 
struct node newnod int data struct node node struct node malloc sizeof struct node node data data node left null node right null return node driver program test mirror int main void construct binari tree 1 2 3 4 5 struct node root newnod 1 root left newnod 2 root right newnod 3 root left right newnod 4 root right left newnod 5 isfold root true printf n tree foldabl els printf n tree foldabl getchar return 0 java java program check foldabl binari tree binari tree node data pointer left child pointer right child class node int data node left right node int item data item left right null class binarytre node root return true given tree fold boolean isfold node node node null return true return isfoldableutil node left node right util function check tree root n1 n2 mirror boolean isfoldableutil node n1 node n2 left right subtre null return true n1 null n2 null return true one tree null return fals n1 null n2 null return fals otherwis check left right subtre mirror counterpart return isfoldableutil n1 left n2 right isfoldableutil n1 right n2 left driver program test function public static void main string arg binarytre tree new binarytre construct binari tree 1 2 3 4 5 tree root new node 1 tree root left new node 2 tree root right new node 3 tree root right left new node 4 tree root left right new node 5 tree isfold tree root system println tree foldabl els system println tree foldabl code contribut mayank jaiswal thank dzmitri huba suggest approach 
