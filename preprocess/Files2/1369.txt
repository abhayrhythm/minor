given link list revers altern node append end list 
extra allow space 1 exampl input list 1 2 3 4 5 6 output list 1 3 5 6 4 2 input list 12 14 16 18 20 output list 12 16 20 18 14 strongli recommend click practic move solut 
idea maintain two link list one list odd posit node 1 3 5 exampl list even posit node 6 4 2 exampl 
follow detail step 
1 travers given link list consid odd list 
follow everi visit node 
node even node remov odd list add front even node list 
node ad front keep revers order 
2 append even node list end odd node list 
c includ stdio h includ stdlib h link list node struct node int data struct node next function revers even posit node append end odd head node given link list void rearrang struct node odd link list less 3 node chang requir odd null odd next null odd next next null return even point begin even list struct node even odd next remov first even node odd next odd next next odd point next node odd list odd odd next set termin even list even next null travers list odd odd next store next node odd list struct node temp odd next next link next even node begin even list odd next next even even odd next remov even node middl odd next temp move odd next odd node temp null odd temp append even list end odd list odd next even function add node begin link list void push struct node head_ref int new_data struct node new_nod struct node malloc sizeof struct node new_nod data new_data new_nod next head_ref head_ref new_nod function print node given link list void printlist struct node node node null printf node data node node next druver program test function int main struct node start null construct link list 1 2 3 4 5 6 7 push start 7 push start 6 push start 5 push start 4 push start 3 push start 2 push start 1 printf n link list call rearrang printlist start rearrang start printf n link list call rearrang printlist start return 0 java java program revers altern node link list append end class linkedlist static node head static class node int data node next node int item data item next null function revers even posit node append end odd head node given link list void rearrang node odd link list less 3 node chang requir odd null odd next null odd next next null return even point begin even list node even odd next remov first even node odd next odd next next odd point next node odd list odd odd next set termin even list even next null travers list odd null odd next null store next node odd list node temp odd next next link next even node begin even list odd next next even even odd next remov even node middl odd next temp move odd next odd node temp null odd temp append even list end odd list odd next even function print node given link list void printlist node node node null system print node data node node next public static void main string arg linkedlist list new linkedlist list head new node 1 list head next new node 2 list head next next new node 3 list head next next next new node 4 list head next next next next new node 5 list head next next next next next new node 6 list head next next next next next next new node 7 system println link list call rearrang list printlist head system println list rearrang head system println link list call rearrang list printlist head python python program revers altern node append end extra space allow 1 node class class node constructor initi node object def __init__ self data self data data self next none link list class contain node object class linkedlist constructor initi head def __init__ self self head none function insert new node begin def push self new_data new_nod node new_data new_nod next self head self head new_nod def printlist self temp self head temp print temp data temp temp next def rearrang self link list less 3 node chang requir odd self head odd none odd next none odd next next none return even point begin even list even odd next remov first even node odd next odd next next odd point next node odd list odd odd next set termin even list even next none travers list odd odd next store next node odd list temp odd next next link next even node begin even list odd next next even even odd next remov even node middl odd next temp move odd next odd node temp none odd temp append even list end odd list odd next even code execut start __name__ __main__ start linkedlist construct link list 1 2 3 4 5 6 7 start push 7 start push 6 start push 5 start push 4 start push 3 start push 2 start push 1 print link list call rearrang start printlist start rearrang print nlink list call rearrang start printlist code contribut nikhil kumar singh nickzuck_007 output link list call rearrang 1 2 3 4 5 6 7 link list call rearrang 1 3 5 7 6 4 2 time complex code simpli travers given link list 
time complex n auxiliari space 1 articl contribut aman gupta 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
