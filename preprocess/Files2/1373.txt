given link list two integ n travers link list retain node delet next n node continu till end link list 
difficulti level rooki exampl input 2 n 2 link list 1 2 3 4 5 6 7 8 output link list 1 2 5 6 input 3 n 2 link list 1 2 3 4 5 6 7 8 9 10 output link list 1 2 3 6 7 8 input 1 n 1 link list 1 2 3 4 5 6 7 8 9 10 output link list 1 3 5 7 9 main part problem maintain proper link node make sure corner case handl 
follow c implement function skipmdeleten skip node delet n node till end list 
assum cannot 0 c c program delet n node node link list includ stdio h includ stdlib h link list node struct node int data struct node next function insert node begin void push struct node head_ref int new_data alloc node struct node new_nod struct node malloc sizeof struct node put data new_nod data new_data link old list new node new_nod next head_ref move head point new node head_ref new_nod function print link list void printlist struct node head struct node temp head temp null printf temp data temp temp next printf n function skip node delet n node link list 
void skipmdeleten struct node head int int n struct node curr head int count main loop travers whole list curr skip node count 1 count curr null count curr curr next reach end list return curr null return start next node delet n node curr next count 1 count n null count struct node temp next free temp curr next link previou list remain node set current pointer next iter curr driver program test function int main creat follow link list 1 2 3 4 5 6 7 8 9 10 struct node head null int 2 n 3 push head 10 push head 9 push head 8 push head 7 push head 6 push head 5 push head 4 push head 3 push head 2 push head 1 printf n ngiven link list n n printlist head skipmdeleten head n printf nlink list delet n printlist head return 0 python python program delet node n node node class class node constructor initi node object def __init__ self data self data data self next none class linkedlist function initi head def __init__ self self head none function insert new node begin def push self new_data new_nod node new_data new_nod next self head self head new_nod util function prit link linkedlist def printlist self temp self head temp print temp data temp temp next def skipmdeleten self n curr self head main loop travers whole list curr skip node count rang 1 curr none return curr curr next curr none return start next node delet n node curr next count rang 1 n 1 none break next link previou list reamin node curr next set current pointer next iter curr driver program test function creat follow link list 1 2 3 4 5 6 7 8 9 10 llist linkedlist 2 n 3 llist push 10 llist push 9 llist push 8 llist push 7 llist push 6 llist push 5 llist push 4 llist push 3 llist push 2 llist push 1 print n ngiven link list n llist printlist print llist skipmdeleten n print nlink list delet llist printlist code contribut nikhil kumar singh nickzuck_007 output 2 n 3 given link list 1 2 3 4 5 6 7 8 9 10 link list delet 1 2 6 7 time complex n n number node link list 
articl contribut chandra prakash 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
