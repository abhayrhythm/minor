given sort array 
write function creat balanc binari search tree use array element 
exampl input array 1 2 3 output balanc bst 2 1 3 input array 1 2 3 4 output balanc bst 3 2 4 1 strongli recommend click practic move solut 
algorithm previou post discuss construct bst sort link list 
construct sort array n time simpler get middl element 1 time 
follow simpl algorithm first find middl node list make root tree construct 
1 get middl array make root 
2 recurs left half right half 
get middl left half make left child root creat step 1 b get middl right half make right child root creat step 1 follow implement algorithm 
main code creat balanc bst highlight 
c includ stdio h includ stdlib h binari tree node struct tnode int data struct tnode left struct tnode right struct tnode newnod int data function construct balanc binari search tree sort array struct tnode sortedarraytobst int arr int start int end base case start end return null get middl element make root int mid start end 2 struct tnode root newnod arr mid recurs construct left subtre make left child root root left sortedarraytobst arr start mid 1 recurs construct right subtre make right child root root right sortedarraytobst arr mid 1 end return root helper function alloc new node given data null left right pointer 
struct tnode newnod int data struct tnode node struct tnode malloc sizeof struct tnode node data data node left null node right null return node util function print preorder travers bst void preorder struct tnode node node null return printf node data preorder node left preorder node right driver program test function int main int arr 1 2 3 4 5 6 7 int n sizeof arr sizeof arr 0 convert list bst struct tnode root sortedarraytobst arr 0 n 1 printf n preorder travers construct bst preorder root return 0 java java program print bst given rang binari tree node class node int data node left right node int data left right null class binarytre static node root function construct balanc binari search tree sort array node sortedarraytobst int arr int start int end base case start end return null get middl element make root int mid start end 2 node node new node arr mid recurs construct left subtre make left child root node left sortedarraytobst arr start mid 1 recurs construct right subtre make right child root node right sortedarraytobst arr mid 1 end return node util function print preorder travers bst void preorder node node node null return system print node data preorder node left preorder node right public static void main string arg binarytre tree new binarytre int arr new int 1 2 3 4 5 6 7 int n arr length root tree sortedarraytobst arr 0 n 1 system println preorder travers construct bst tree preorder root code contribut mayank jaiswal time complex n follow recurr relat sortedarraytobst 
n 2t n 2 c n time taken array size n c constant find middl array link root left right subtre take constant time recurr solv use master theorem fall case 1 pleas write comment find anyth incorrect want share inform topic discuss 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
