let us consid travers inord sequenc b e f c preorder sequenc b e c f preorder sequenc leftmost element root tree 
know root given sequenc 
search inord sequenc find element left side left subtre element right right subtre 
know structur 
b e f c recurs follow step get follow tree 
b c e f algorithm buildtre 1 pick element preorder 
increment preorder index variabl preindex code pick next element next recurs call 
2 creat new tree node tnode data pick element 
3 find pick element index inord 
let index inindex 
4 call buildtre element inindex make built tree left subtre tnode 
5 call buildtre element inindex make built tree right subtre tnode 
6 return tnode 
thank rohini tushar suggest code 
c program construct tree use inord preorder travers includ stdio h includ stdlib h binari tree node data pointer left child pointer right child struct node char data struct node left struct node right prototyp util function int search char arr int strt int end char valu struct node newnod char data recurs function construct binari size len inord travers preorder travers pre 
initi valu instrt inend 0 len 1 function error check case inord preorder form tree struct node buildtre char char pre int instrt int inend static int preindex 0 instrt inend return null pick current node preorder travers use preindex increment preindex struct node tnode newnod pre preindex node children return instrt inend return tnode els find index node inord travers int inindex search instrt inend tnode data use index inord travers construct left right subtress tnode left buildtre pre instrt inindex 1 tnode right buildtre pre inindex 1 inend return tnode util function function find index valu arr start end function assum valu present int search char arr int strt int end char valu int strt end arr valu return helper function alloc new node given data null left right pointer 
struct node newnod char data struct node node struct node malloc sizeof struct node node data data node left null node right null return node funtcion test buildtre void printinord struct node node node null return first recur left child printinord node left print data node printf c node data recur right child printinord node right driver program test function int main char b e f c char pre b e c f int len sizeof sizeof 0 struct node root buildtre pre 0 len 1 let us test built tree print insord travers printf inord travers construct tree n printinord root getchar java java program construct tree use inord preorder travers binari tree node data pointer left child pointer right child class node char data node left right node char item data item left right null class binarytre node root static int preindex 0 recurs function construct binari size len inord travers preorder travers pre 
initi valu instrt inend 0 len 1 function error check case inord preorder form tree node buildtre char char pre int instrt int inend instrt inend return null pick current node preorder travers use preindex increment preindex node tnode new node pre preindex node children return instrt inend return tnode els find index node inord travers int inindex search instrt inend tnode data use index inord travers construct left right subtress tnode left buildtre pre instrt inindex 1 tnode right buildtre pre inindex 1 inend return tnode util function function find index valu arr start end function assum valu present int search char arr int strt int end char valu int strt end arr valu return return funtcion test buildtre void printinord node node node null return first recur left child printinord node left print data node system print node data recur right child printinord node right driver program test function public static void main string arg binarytre tree new binarytre char new char b e f c char pre new char b e c f int len length node root tree buildtre pre 0 len 1 build tree print inord travers system println inord travers construct tree tree printinord root code contribut mayank jaiswal python python program construct tree use inord preorder travers binari tree node class node constructor creat new node def __init__ self data self data data self left none self right none recurs function construct binari size len inord travers preorder travers pre 
initi valu instrt inend 0 len 1 function error check case inord preorder form tree def buildtre inord preorder instrt inend instrt inend return none pich current node preorder travers use preindex increment preindex tnode node preorder buildtre preindex buildtre preindex 1 node children return instrt inend return tnode els find index node inord travers inindex search inord instrt inend tnode data use index inord travers construct left right subtre tnode left buildtre inord preorder instrt inindex 1 tnode right buildtre inord preorder inindex 1 inend return tnode util function function find index vaue arr start end function assum valu rpesent inord def search arr start end valu rang start end 1 arr valu return def printinord node node none return first recur left child printinord node left print data node print node data recur right child printinord node right driver program test function inord b e f c preorder b e c f static variabl preindex buildtre preindex 0 root buildtre inord preorder 0 len inord 1 let us test build tree prite inord travers print inord travers construct tree printinord root code contribut nikhil kumar singh nickzuck_007 output inord travers construct tree b e f c time complex n 2 
worst case occur tree left skew 
exampl preorder inord travers worst case b c c b 
construct binari tree postord inord pleas write comment find bug code algorithm find way solv problem 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
