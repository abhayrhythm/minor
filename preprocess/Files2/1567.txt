given binari tree return follow valu 
1 everi level comput sum leav leav level 
otherwis ignor 
2 return multipl sum 
exampl input root tree 2 7 5 9 output 63 first level leav 
second level one leaf 7 third level also one leaf 9 therefor result 7 9 63 input root tree 2 7 5 8 6 9 1 11 4 10 output 208 first two level leav 
third level singl leaf 8 last level four leav 1 11 4 10 therefor result 8 1 11 4 10 strongli recommend minim browser tri first 
one simpl solut recurs comput leaf sum level start top bottom 
multipli sum level leav 
time complex solut would n2 
effici solut use queue base level order travers 
travers process differ level separ 
everi process level check leav 
comput sum leaf node 
final return product sum 
c iter c program find sum data leav binari tree level multipli sum obtain level 
includ bit stdc h use namespac std binari tree node struct node int data struct node left right helper function check node leaf tree bool isleaf node root return root left root right calcul sum leaf node level return multipl sum int sumandmultiplyleveldata node root tree empti root return 0 int mul 1 store result creat empti queue level order tarvers queue node q enqueu root initi height q push root level order travers tree 1 nodecount queue size indic number node current lelvel 
int nodecount q size node current level done nodecount 0 break initi leaf sum current level int levelsum 0 boolean variabl indic found leaf node current level bool leaffound fals dequeu node current level enqueu node next level nodecount 0 process next node current level node node q front node leaf updat sum level isleaf node leaffound true levelsum node data q pop add children node node left null q push node left node right null q push node right nodecount found least one leaf multipli result level sum 
leaffound mul levelsum return mul return result util function creat new tree node node newnod int data node temp new node temp data data temp left temp right null return temp driver program test function int main node root newnod 2 root left newnod 7 root right newnod 5 root left right newnod 6 root left left newnod 8 root left right left newnod 1 root left right right newnod 11 root right right newnod 9 root right right left newnod 4 root right right right newnod 10 cout final product valu sumandmultiplyleveldata root endl return 0 java iter java program find sum data leav binari tree level multipli sum obtain level 
import necessari class import java util linkedlist import java util queue import java util stack class contain left right child current node key valu class node int data node left right public node int item data item left right null class binarytre node root helper function check node leaf tree boolean isleaf node node return node left null node right null calcul sum leaf node level return multipl sum int sumandmultiplyleveldata return sumandmultiplyleveldata root int sumandmultiplyleveldata node node tree empti node null return 0 int mul 1 store result creat empti queue level order tarvers linkedlist node q new linkedlist node enqueu root initi height q add node level order travers tree true nodecount queue size indic number node current lelvel 
int nodecount q size node current level done nodecount 0 break initi leaf sum current level int levelsum 0 boolean variabl indic found leaf node current level boolean leaffound fals dequeu node current level enqueu node next level nodecount 0 node node1 node1 q poll node leaf updat sum level isleaf node1 leaffound true levelsum node1 data add children node node1 left null q add node1 left node1 right null q add node1 right nodecount found least one leaf multipli result level sum 
leaffound mul levelsum return mul return result public static void main string arg creat binari tree enter node binarytre tree new binarytre tree root new node 2 tree root left new node 7 tree root right new node 5 tree root left left new node 8 tree root left right new node 6 tree root left right left new node 1 tree root left right right new node 11 tree root right right new node 9 tree root right right left new node 4 tree root right right right new node 10 system println final product valu tree sumandmultiplyleveldata code contribut mayank jaiswal output final product valu 208 articl contribut moham raqeeb 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
