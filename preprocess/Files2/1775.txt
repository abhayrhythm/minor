given graph repres flow network everi edg capac 
also given two vertic sourc sink graph find maximum possibl flow follow constraint flow edg exceed given capac edg 
b incom flow equal outgo flow everi vertex except exampl consid follow graph clr book 
maximum possibl flow graph 23 ford fulkerson algorithm follow simpl idea ford fulkerson algorithm 1 start initi flow 0 
2 augment path sourc sink 
add path flow flow 
3 return flow 
time complex time complex algorithm max_flow e 
run loop augment path 
worst case may add 1 unit flow everi iter 
therefor time complex becom max_flow e 
implement simpl algorithm 
let us first defin concept residu graph need understand implement 
residu graph flow network graph indic addit possibl flow 
path sourc sink residu graph possibl add flow 
everi edg residu graph valu call residu capac equal origin capac edg minu current flow 
residu capac basic current capac edg 
let us talk implement detail 
residu capac 0 edg two vertic residu graph 
initi residu graph origin graph initi flow initi residu capac equal origin capac 
find augment path either bf df residu graph 
use bf implement 
use bf find path sourc sink 
bf also build parent array 
use parent array travers found path find possibl flow path find minimum residu capac along path 
later add found path flow overal flow 
import thing need updat residu capac residu graph 
subtract path flow edg along path add path flow along revers edg need add path flow along revers edg may later need send flow revers direct see follow video exampl 
http www youtub com watch v 8mwfgb lym follow c java implement ford fulkerson algorithm 
keep thing simpl graph repres 2d matrix 
c c program implement ford fulkerson algorithm includ iostream includ limit h includ string h includ queue use namespac std number vertic given graph defin v 6 return true path sourc sink residu graph 
also fill parent store path bool bf int rgraph v v int int int parent creat visit array mark vertic visit bool visit v memset visit 0 sizeof visit creat queue enqueu sourc vertex mark sourc vertex visit queue int q q push visit true parent 1 standard bf loop q empti int u q front q pop int v 0 v v v visit v fals rgraph u v 0 q push v parent v u visit v true reach sink bf start sourc return true els fals return visit true return tne maximum flow given graph int fordfulkerson int graph v v int int int u v creat residu graph fill residu graph given capac origin graph residu capac residu graph int rgraph v v residu graph rgraph j indic residu capac edg j edg 
rgraph j 0 u 0 u v u v 0 v v v rgraph u v graph u v int parent v array fill bf store path int max_flow 0 flow initi augment flow tere path sourc sink bf rgraph parent find minimum residu capac edh along path fill bf 
say find maximum flow path found 
int path_flow int_max v v v parent v u parent v path_flow min path_flow rgraph u v updat residu capac edg revers edg along path v v v parent v u parent v rgraph u v path_flow rgraph v u path_flow add path flow overal flow max_flow path_flow return overal flow return max_flow driver program test function int main let us creat graph shown exampl int graph v v 0 16 13 0 0 0 0 0 10 12 0 0 0 4 0 0 14 0 0 0 9 0 0 20 0 0 0 7 0 4 0 0 0 0 0 0 cout maximum possibl flow fordfulkerson graph 0 5 return 0 java java program implement ford fulkerson algorithm import java util 
import java lang 
import java io 
import java util linkedlist class maxflow static final int v 6 number vertic graph return true path sourc sink residu graph 
also fill parent store path boolean bf int rgraph int int int parent creat visit array mark vertic visit boolean visit new boolean v int 0 v visit fals creat queue enqueu sourc vertex mark sourc vertex visit linkedlist integ queue new linkedlist integ queue add visit true parent 1 standard bf loop queue size 0 int u queue poll int v 0 v v v visit v fals rgraph u v 0 queue add v parent v u visit v true reach sink bf start sourc return true els fals return visit true return tne maximum flow given graph int fordfulkerson int graph int int int u v creat residu graph fill residu graph given capac origin graph residu capac residu graph residu graph rgraph j indic residu capac edg j edg 
rgraph j 0 int rgraph new int v v u 0 u v u v 0 v v v rgraph u v graph u v array fill bf store path int parent new int v int max_flow 0 flow initi augment flow tere path sourc sink bf rgraph parent find minimum residu capac edh along path fill bf 
say find maximum flow path found 
int path_flow integ max_valu v v v parent v u parent v path_flow math min path_flow rgraph u v updat residu capac edg revers edg along path v v v parent v u parent v rgraph u v path_flow rgraph v u path_flow add path flow overal flow max_flow path_flow return overal flow return max_flow driver program test function public static void main string arg throw java lang except let us creat graph shown exampl int graph new int 0 16 13 0 0 0 0 0 10 12 0 0 0 4 0 0 14 0 0 0 9 0 0 20 0 0 0 7 0 4 0 0 0 0 0 0 maxflow new maxflow system println maximum possibl flow fordfulkerson graph 0 5 output 
