discuss level order travers post previou post 
idea print last level first second last level 
like level order travers everi level print left right 
exampl tree revers level order travers tree 4 5 2 3 1 
method normal level order travers easili modifi revers level order travers 
method 1 recurs function print given level easili modifi method 1 normal level order travers 
method 1 method printgivenlevel print given level number 
thing need chang instead call printgivenlevel first level last level call last level first level 
c recurs c program print revers level order travers includ stdio h includ stdlib h binari tree node data pointer left right child struct node int data struct node left struct node right function protoyp void printgivenlevel struct node root int level int height struct node node struct node newnod int data function print revers level order travers tree void reverselevelord struct node root int h height root int h 1 line differ normal level order printgivenlevel root print node given level void printgivenlevel struct node root int level root null return level 1 printf root data els level 1 printgivenlevel root left level 1 printgivenlevel root right level 1 comput height tree number node along longest path root node farthest leaf node 
int height struct node node node null return 0 els comput height subtre int lheight height node left int rheight height node right use larger one lheight rheight return lheight 1 els return rheight 1 helper function alloc new node given data null left right pointer 
struct node newnod int data struct node node struct node malloc sizeof struct node node data data node left null node right null return node driver program test function int main struct node root newnod 1 root left newnod 2 root right newnod 3 root left left newnod 4 root left right newnod 5 printf level order travers binari tree n reverselevelord root return 0 java recurs java program print revers level order travers binari tree node class node int data node left right node int item data item left right class binarytre node root function print revers level order travers tree void reverselevelord node node int h height node int h 1 line differ normal level order printgivenlevel node print node given level void printgivenlevel node node int level node null return level 1 system print node data els level 1 printgivenlevel node left level 1 printgivenlevel node right level 1 comput height tree number node along longest path root node farthest leaf node 
int height node node node null return 0 els comput height subtre int lheight height node left int rheight height node right use larger one lheight rheight return lheight 1 els return rheight 1 driver program test function public static void main string arg binarytre tree new binarytre let us creat tree shown diagram tree root new node 1 tree root left new node 2 tree root right new node 3 tree root left left new node 4 tree root left right new node 5 system println level order travers binari tree tree reverselevelord tree root code contribut mayank jaiswal python recurs python program print revers level order travers binari tree node class node constructor creat new node def __init__ self data self data data self left none self right none function print revers level order travers def reverselevelord root h height root revers rang 1 h 1 printgivenlevel root print node given level def printgivenlevel root level root none return level 1 print root data elif level 1 printgivenlevel root left level 1 printgivenlevel root right level 1 comput height tree number node along longest path root node farthest leaf node def height node node none return 0 els comput height subtre lheight height node left rheight height node right use larger one lheight rheight return lheight 1 els return rheight 1 driver program test function root node 1 root left node 2 root right node 3 root left left node 4 root left right node 5 print level order travers binari tree reverselevelord root code contribut nikhil kumar singh nickzuck_007 output level order travers binari tree 4 5 2 3 1 time complex worst case time complex method n 2 
skew tree printgivenlevel take n time n number node skew tree 
time complex printlevelord n n 1 n 2 1 n 2 
