given singli link list data member sort ascend order 
construct balanc binari search tree data member given link list 
exampl input link list 1 2 3 output balanc bst 2 1 3 input link list 1 2 3 4 5 6 7 output balanc bst 4 2 6 1 3 4 7 input link list 1 2 3 4 output balanc bst 3 2 4 1 input link list 1 2 3 4 5 6 output balanc bst 4 2 6 1 3 5 method 1 simpl follow simpl algorithm first find middl node list make root tree construct 
1 get middl link list make root 
2 recurs left half right half 
get middl left half make left child root creat step 1 b get middl right half make right child root creat step 1 time complex nlogn n number node link list 
see forum thread detail 
method 2 tricki method 1 construct tree root leav 
method construct leav root 
idea insert node bst order appear link list tree construct n time complex 
first count number node given link list 
let count n count node take left n 2 node recurs construct left subtre 
left subtre construct alloc memori root link left subtre root 
final recurs construct right subtre link root 
construct bst also keep move list head pointer next appropri pointer recurs call 
follow c implement method 2 main code creat balanc bst highlight 
c includ stdio h includ stdlib h link list node struct lnode int data struct lnode next binari tree node struct tnode int data struct tnode left struct tnode right struct tnode newnod int data int countlnod struct lnode head struct tnode sortedlisttobstrecur struct lnode head_ref int n function count number node link list call sortedlisttobstrecur construct bst struct tnode sortedlisttobst struct lnode head count number node link list int n countlnod head construct bst return sortedlisttobstrecur head n main function construct balanc bst return root 
head_ref pointer pointer head node link list n 
node link list struct tnode sortedlisttobstrecur struct lnode head_ref int n base case n 0 return null recurs construct left subtre struct tnode left sortedlisttobstrecur head_ref n 2 alloc memori root link construct left subtre root struct tnode root newnod head_ref data root left left chang head pointer link list parent recurs call head_ref head_ref next recurs construct right subtre link root number node right subtre total node node left subtre 1 root n n 2 1 root right sortedlisttobstrecur head_ref n n 2 1 return root util function util function return count node given link list int countlnod struct lnode head int count 0 struct lnode temp head temp temp temp next count return count function insert node beging link list void push struct lnode head_ref int new_data alloc node struct lnode new_nod struct lnode malloc sizeof struct lnode put data new_nod data new_data link old list new node new_nod next head_ref move head point new node head_ref new_nod function print node given link list void printlist struct lnode node node null printf node data node node next helper function alloc new node given data null left right pointer 
struct tnode newnod int data struct tnode node struct tnode malloc sizeof struct tnode node data data node left null node right null return node util function print preorder travers bst void preorder struct tnode node node null return printf node data preorder node left preorder node right drier program test function int main start empti list struct lnode head null let us creat sort link list test function creat link list 1 2 3 4 5 6 7 push head 7 push head 6 push head 5 push head 4 push head 3 push head 2 push head 1 printf n given link list printlist head convert list bst struct tnode root sortedlisttobst head printf n preorder travers construct bst preorder root return 0 java class linkedlist head node link list static lnode head link list node class lnode int data lnode next prev lnode int data next prev null binari tree node class tnode int data tnode left right tnode int data left right null function count number node link list call sortedlisttobstrecur construct bst tnode sortedlisttobst count number node link list int n countnod head construct bst return sortedlisttobstrecur n main function construct balanc bst return root 
n 
node doubli link list tnode sortedlisttobstrecur int n base case n 0 return null recurs construct left subtre tnode left sortedlisttobstrecur n 2 head_ref refer middl node make middl node root bst tnode root new tnode head data set pointer left subtre root left left chang head pointer link list parent recurs call head head next recurs construct right subtre link root 
number node right subtre total node node left subtre 1 root root right sortedlisttobstrecur n n 2 1 return root util function util function return count node given link list int countnod lnode head int count 0 lnode temp head temp null temp temp next count return count function insert node beging doubli link list void push int new_data alloc node lnode new_nod new lnode new_data sinc ad begin prev alway null new_nod prev null link old list new node new_nod next head chang prev head node new node head null head prev new_nod move head point new node head new_nod function print node given link list void printlist lnode node node null system print node data node node next util function print preorder travers bst void preorder tnode node node null return system print node data preorder node left preorder node right drier program test function public static void main string arg linkedlist llist new linkedlist let us creat sort link list test function creat link list 7 6 5 4 3 2 1 llist push 7 llist push 6 llist push 5 llist push 4 llist push 3 llist push 2 llist push 1 system println given link list llist printlist head convert list bst tnode root llist sortedlisttobst system println system println pre order travers construct bst llist preorder root code contribut mayank jaiswal mayank_24 time complex n 
