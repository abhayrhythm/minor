given array repres tree way array valu give parent node particular index 
valu root node index would alway 1 find height tree 
height binari tree number node path root deepest leaf node number includ root leaf 
input parent 1 5 5 2 2 1 3 output 4 given array repres follow binari tree 5 1 2 0 3 4 6 input parent 1 0 0 1 1 3 5 output 5 given array repres follow binari tree 0 1 2 3 4 5 6 sourc amazon interview experi set 128 sdet strongli recommend minim browser tri first 
simpl solut first construct tree find height construct binari tree 
tree construct recurs first search current root recur found index make left right subtre root 
solut take n2 linearli search everi node 
effici solut solv problem n time 
idea first calcul depth everi node store array depth 
depth node return maximum depth 
1 find depth node fill auxiliari array depth 
2 return maximum valu depth 
follow step find depth node index 
1 root depth 1 
2 depth parent evalu depth depth parent 1 
3 depth parent evalu recur parent assign depth depth parent 1 
follow implement idea 
c c program find height use parent array includ iostream use namespac std function fill depth th element parent 
depth fill depth 
void filldepth int parent int int depth depth alreadi fill depth return node index root parent 1 depth 1 return depth parent evalu evalu depth parent first depth parent 0 filldepth parent parent depth depth node depth parent plu 1 depth depth parent 1 function return height binari tree repres parent array int findheight int parent int n creat array store depth node initi depth everi node 0 invalid valu 
depth root 1 int depth n int 0 n depth 0 fill depth node int 0 n filldepth parent depth height binari tree maximum depth 
find maximum valu depth assign ht 
int ht depth 0 int 1 n ht depth ht depth return ht driver program test function int main int parent 1 5 5 2 2 1 3 int parent 1 0 0 1 1 3 5 int n sizeof parent sizeof parent 0 cout height findheight parent n return 0 java java program find height use parent array class binarytre function fill depth th element parent 
depth fill depth 
void filldepth int parent int int depth depth alreadi fill depth 0 return node index root parent 1 depth 1 return depth parent evalu evalu depth parent first depth parent 0 filldepth parent parent depth depth node depth parent plu 1 depth depth parent 1 function return height binari tree repres parent array int findheight int parent int n creat array store depth node initi depth everi node 0 invalid valu 
depth root 1 int depth new int n int 0 n depth 0 fill depth node int 0 n filldepth parent depth height binari tree maximum depth 
find maximum valu depth assign ht 
int ht depth 0 int 1 n ht depth ht depth return ht driver program test function public static void main string arg binarytre tree new binarytre int parent 1 5 5 2 2 1 3 int parent new int 1 0 0 1 1 3 5 int n parent length system println height tree findheight parent n python python program find height use parent array functio fill depth th element parent depth fill depth def filldepth parent depth depth alreadi fill depth 0 return node index root parent 1 depth 1 return depth parent evalu evalu depth parent first depth parent 0 filldepth parent parent depth depth node depth parent plu 1 depth depth parent 1 function reutn height binari tree repres parent array def findheight parent n len parent creat array store depth node initi depth everi node 0 depth root 1 depth 0 rang n fill depth node rang n filldepth parent depth height binari tree maximum depth 
find maximum depth assign ht ht depth 0 rang 1 n ht max ht depth return ht driver program test function parent 1 0 0 1 1 3 5 print height findheight parent code contribut nikhil kumar singh nickzuck_007 output height 5 note time complex program seem n 
take closer look observ depth everi node evalu 
articl contribut siddharth 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
