write c function count number node given singli link list 
exampl function return 5 link list 1 3 1 2 1 
iter solut 1 initi count 0 2 initi node pointer current head 
3 follow current null current current next b count 4 return count follow c c java python implement algorithm find count node 
c c iter c program find length count node link list includ stdio h includ stdlib h link list node struct node int data struct node next given refer pointer pointer head list int push new node front list 
void push struct node head_ref int new_data alloc node struct node new_nod struct node malloc sizeof struct node put data new_nod data new_data link old list new node new_nod next head_ref move head point new node head_ref new_nod count 
node link list int getcount struct node head int count 0 initi count struct node current head initi current current null count current current next return count drier program test count function int main start empti list struct node head null use push construct list 1 2 1 3 1 push head 1 push head 3 push head 1 push head 2 push head 1 check count function printf count node getcount head return 0 java java program count number node link list link list node class node int data node next node int data next null link list class class linkedlist node head head list insert new node front list 
public void push int new_data 1 2 alloc node put data node new_nod new node new_data 3 make next new node head new_nod next head 4 move head point new node head new_nod return count node link list public int getcount node temp head int count 0 temp null count temp temp next return count drier program test function 
ideal function separ user class 
kept keep code compact public static void main string arg start empti list linkedlist llist new linkedlist llist push 1 llist push 3 llist push 1 llist push 2 llist push 1 system println count node llist getcount python complet work python program find length link list iter node class class node function initialis node object def __init__ self data self data data assign data self next none initi next null link list class contain node object class linkedlist function initi head def __init__ self self head none function linkedlist class 
insert new node begin link list 
def push self new_data 1 2 alloc node put data new_nod node new_data 3 make next new node head new_nod next self head 4 move head point new node self head new_nod function count number node link list iter given node start node 
def getcount self temp self head initialis temp count 0 initialis count loop end link list reach temp count 1 temp temp next return count code execut start __name__ __main__ llist linkedlist llist push 1 llist push 3 llist push 1 llist push 2 llist push 1 print count node llist getcount output count node 5 
