
Introduction:
I worked on Brain Computer Interface Technology under Cybersecurity at the University of North Texas for two months as my summer internship. We closely worked with some Ph.D. students under the monitoring of mentor researcher. It was a research based project wherein we were given the task to discover new functionalities of two pre-invented BCI devices – Neurosky Mindwave and Emotiv EPOC.
Application:
Prior to the start of the application, the user was asked to think about a particular number from 0 to 9, for around 30 seconds. We could develop an application that flashed random numbers from 0 to 9 on the screen per second for an adjustable duration of 20-30 seconds. Looking at the flashing numbers, the user was asked to identify or look for the number that he/she had been thinking about. One of the BCI devices could be used to capture EEG values from the user while he/she was undergoing test with our application. These EEG values of the brain of the user were recorded in a Microsoft Access datasheet along with the values of brain voltage for each corresponding EEG value. We got approximately 512 EEG values per second, i.e., for each flash of a number we had 512 different values from the brain. We used programming in Python to filter the recorded data using the Butterworth filter in order to remove the unwanted noises in the data. The application interface and front end was created using C#. Based on the filtered EEG values and using Java coding we could identify two essential values: P300 and N400. P300 is the highest positive amplitude value of EEG which is incurred around the 300th second. A P300 EEG value would be generated by the user brain when he could find his number flashing on the screen. Out of the whole data, the number which had the highest degree of P300s was supposedly the number that the user was thinking about prior to the test and was looking for during the test. Hence, the number in the human thoughts could be identified with an appreciable accuracy without asking the user to manually enter the number. The only thing that would be needed is that the user thinks about his number, uninterrupted for 30 seconds or less and tries to identify that number during the testing.
Usage:
This feature could specifically be used in the field of cyber-security for password protection. An application may be developed that would ask the user to think about his pin number and after the processing of the data, an authorized user may be given the access to his account based on the correct pin without actually having to enter the pin physically anywhere. This application may bring down the case of eavesdropping or hacking.
This article is contributed by Gunjan Soni.  If you like GeeksforGeeks and would like to contribute, you can also write an article and mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.




(adsbygoogle = window.adsbygoogle || []).push({});


Company Wise Coding Practice
   Topic Wise Coding Practice
