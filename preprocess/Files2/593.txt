four month gap miss gfg new post 
given x n matrix transpos matrix without auxiliari memori easi transpos matrix use auxiliari array 
matrix symmetr size transpos matrix inplac mirror 2d array across diagon tri 
transpos arbitrari size matrix inplac 
see follow matrix b c g j e f b e h k g h c f l j k l per 2d number c c correspond locat map look like org element new 0 0 1 b 4 2 c 8 3 1 4 e 5 5 f 9 6 g 2 7 h 6 8 10 9 j 3 10 k 7 11 l 11 note first last element stay origin locat 
easili see transform form permut cycl 
1 4 5 9 3 1 total 5 element form cycl 2 8 10 7 6 2 anoth 5 element form cycl 0 self cycl 11 self cycl exampl easili devis algorithm move element along cycl 
gener permut cycl 
number element matric constant given n r c r row count c column count 
element locat ol old locat r x c matrix move nl new locat c x r matrix 
need establish relat ol nl r c assum ol oc 
c c calcul element address ol x c oc ignor base refer simplic move new locat nl transpos matrix say nl nr nc c c term nl nr x r nc r column count c row count matrix transpos observ nr oc nc replac nl nl oc x r eq 1 solv relat ol nl get ol x c oc ol x r x c x r oc x r x n oc x r fact r c n x n nl eq 1 x n 1 nl nl ol x r x n 1 note valu nl ol never go beyond n 1 consid modulo divis side n 1 get follow base properti congruenc nl mod n 1 ol x r x n 1 mod n 1 ol x r mod n 1 x n 1 mod n 1 ol x r mod n 1 sinc second term evalu zero nl ol x r mod n 1 sinc nl alway less n 1 curiou reader might observ signific relat 
everi locat scale factor r row size 
obviou matrix everi locat displac scale factor r actual multipli depend congruenc class n 1 e 
multipli valu congruent class henc everi locat transform simpl modulo divis 
modulo divis form cyclic permut 
need book keep inform keep track alreadi move element 
code inplac matrix transform program place matrix transpos includ stdio h includ iostream includ bitset defin hash_siz 128 use namespac std util function print 2d array size nr x nc base address void print2darray int int nr int nc int r 0 r nr r int c 0 c nc c printf 4d r nc c printf n printf n n non squar matrix transpos matrix size r x c base address void matrixinplacetranspos int int r int c int size r c 1 int hold element replac eventu becom next element move int next locat move int cyclebegin hold start cycl int iter bitset hash_siz b hash mark move element b reset b 0 b size 1 1 note 0 size 1 move size cyclebegin input matrix r x c output matrix 1 i_new r n 1 next r size swap next b 1 next cyclebegin get next move queri random locat 
1 size b cout endl driver program test function int main void int r 5 c 6 int size r c int new int size int 0 size 1 print2darray r c matrixinplacetranspos r c print2darray c r delet return 0 output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 1 7 13 19 25 2 8 14 20 26 3 9 15 21 27 4 10 16 22 28 5 11 17 23 29 6 12 18 24 30 extens 17 march 2013 reader identifi similar matrix transpos string transform 
without much theori present problem solut 
given array element like a1b2c3d4e5f6g7h8i9j1k2l3m4 
convert abcdefghijklm1234567891234 
program run inplac 
need inplac transpos 
given code 
includ stdio h includ iostream includ bitset defin hash_siz 128 use namespac std typedef char data_t void print2darray char int nr int nc int size nr nc int 0 size printf 4c printf n void matrixtransposeinplacearrang data_t int r int c int size r c 1 data_t hold element replac eventu becom next element move int next locat move int cyclebegin hold start cycl int iter bitset hash_siz b hash mark move element b reset b 0 b size 1 1 note 0 size 1 move size cyclebegin input matrix r x c output matrix 1 i_new r size next r size swap next b 1 next cyclebegin get next move queri random locat 
1 size b cout endl void fill data_t buf int size fill abcd int 0 size buf fill 0123 buf size int 0 size buf 0 void testcase_01 void int r 2 c 10 int size r c data_t new data_t size fill c print2darray r c cout endl matrixtransposeinplacearrang r c print2darray c r cout endl delet int main testcase_01 return 0 updat 09 juli 2016 note space complex storag order 
long time happen review post 
reader point valid question place 
use bitset marker hash code 
apolog incorrect percept look articl head content 
prepar initi content think naiv implement use auxiliari space atleast mn need transpos rectangualr matrix 
program present use constant space bitset size fix compil time 
howev support arbitrari size matric need bitset size atleast mn size 
one use hashmap amort 1 complex mark finish locat yet hashmap worst case complex n log n base implement 
hashmap space cost also increas base item insert 
pleas note place use w r 
matrix space 
also assum matrix store row major order contigu locat memori 
reader deriv formula matrix repres column major order program languag e g 
fortran julia 
thank reader point two gap 
post incomplet without mention two link 
1 aashish cover good theori behind cycl leader algorithm 
see post string transform 
2 usual sambasiva demonstr except skill recurs problem 
ensur understand solut 
venki 
pleas write comment find anyth incorrect want share inform topic discuss 
adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
