revers dn look use internet ip address find domain name 
exampl type 74 125 200 106 browser automat redirect googl 
implement revers dn look cach 
follow oper need cach 
1 add ip address url map cach 
2 find url given ip address 
one solut use hash 
post trie base solut discuss 
one advantag trie base solut worst case upper bound 1 trie hash best possibl averag case time complex 1 
also trie implement prefix search find url common prefix ip address 
gener disadvantag trie larg amount memori requir major problem alphabet size 11 
ten charact need digit 0 9 one dot 
idea store ip address trie node last node store correspond domain name 
follow c style implement c 
c base program implement revers dn lookup includ stdio h includ stdlib h includ string h atmost 11 differ char valid ip address defin char 11 maximum length valid ip address defin max 50 util function find index child given charact c int getindex char c return c 
10 c 0 util function find charact given child index 
char getcharfromindex int return 10 

0 trie node 
struct trienod bool isleaf char url struct trienod child char function creat new trie node 
struct trienod newtrienod void struct trienod newnod new trienod newnod isleaf fals newnod url null int 0 char newnod child null return newnod method insert ip address correspond domain name trie 
last node trie contain url 
void insert struct trienod root char ipadd char url length ip address int len strlen ipadd struct trienod pcrawl root travers length ip address 
int level 0 level len level get index child node current charact ipadd 
index must 0 10 0 9 use digit 10 dot int index getindex ipadd level creat new child exist alreadi pcrawl child index pcrawl child index newtrienod move child pcrawl pcrawl child index need carri last node 
save correspond url ip address last node trie 
pcrawl isleaf true pcrawl url new char strlen url 1 strcpi pcrawl url url function return url given ip address present dn cach 
els return null char searchdnscach struct trienod root char ipadd root node trie 
struct trienod pcrawl root int len strlen ipadd travers length ip address 
int level 0 level len level int index getindex ipadd level pcrawl child index return null pcrawl pcrawl child index find last node given ip address print url 
pcrawl null pcrawl isleaf return pcrawl url return null driver function 
int main chang third ipaddress valid char ipadd max 107 108 11 123 107 109 123 255 74 125 200 106 char url 50 www samsung com www samsung net www googl int n sizeof ipadd sizeof ipadd 0 struct trienod root newtrienod insert ip address correspond domain name ip address valid 
int 0 n insert root ipadd url revers dn look succe print domain name along dn resolv 
char ip 107 108 11 123 char res_url searchdnscach root ip res_url null printf revers dn look resolv cach n ip res_url els printf revers dn look resolv cach return 0 output revers dn look resolv cach 107 108 11 123 www samsung com note implement trie assum given ip address contain charact 0 1 9 
user give invalid ip address contain charact 
problem resolv valid input ip address insert trie 
use approach discuss ip address valid 
articl contribut kumar gautam 
pleas write comment find anyth incorrect want share inform topic discuss adsbygoogl window adsbygoogl push compani wise code practic topic wise code practic 
